<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Eprover" version="2.5" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.4.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.6" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.8.7" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="ocaml" proved="true">
<path name=".."/><path name="heap.ml"/>
<theory name="Heap" proved="true">
 <goal name="Imperative.t&#39;vc" expl="VC for t" proved="true">
 <proof prover="0"><result status="valid" time="0.10"/></proof>
 </goal>
 <goal name="Imperative.num_exist" proved="true">
 <proof prover="1"><result status="valid" time="0.39" steps="1894"/></proof>
 </goal>
 <goal name="Imperative.ancestor_f&#39;vc" expl="VC for ancestor_f" proved="true">
 <proof prover="1"><result status="valid" time="5.73" steps="49748"/></proof>
 <proof prover="2"><result status="valid" time="0.47" steps="74255"/></proof>
 </goal>
 <goal name="Imperative.children_f&#39;vc" expl="VC for children_f" proved="true">
 <proof prover="1"><result status="valid" time="0.03" steps="56"/></proof>
 <proof prover="2"><result status="valid" time="0.16" steps="28161"/></proof>
 </goal>
 <goal name="Imperative.transativity" proved="true">
 <proof prover="1"><result status="valid" time="0.07" steps="408"/></proof>
 </goal>
 <goal name="Imperative.max_coherent&#39;vc" expl="VC for max_coherent" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="max_coherent&#39;vc.0" expl="check division by zero" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="max_coherent&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="54"/></proof>
  </goal>
  <goal name="max_coherent&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="64"/></proof>
  </goal>
  <goal name="max_coherent&#39;vc.3" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="(is_heap s n)">
   <goal name="max_coherent&#39;vc.3.0" expl="asserted formula" proved="true">
   <proof prover="1"><result status="valid" time="0.01" steps="18"/></proof>
   </goal>
   <goal name="max_coherent&#39;vc.3.1" expl="postcondition" proved="true">
   <transf name="unfold" proved="true" arg1="is_heap" arg2="in" arg3="h">
    <goal name="max_coherent&#39;vc.3.1.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.39" steps="2728"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="max_coherent&#39;vc.4" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="max_coherent&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="59"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Imperative.pop_occ_1" proved="true">
 <proof prover="1"><result status="valid" time="4.63" steps="16281"/></proof>
 <proof prover="3"><result status="valid" time="2.06" steps="4039297"/></proof>
 </goal>
 <goal name="Imperative.pop_occ_2" proved="true">
 <proof prover="1"><result status="valid" time="5.11" steps="19584"/></proof>
 <proof prover="3"><result status="valid" time="2.84" steps="5667161"/></proof>
 </goal>
 <goal name="Imperative.pop_order" proved="true">
 <proof prover="1"><result status="valid" time="0.03" steps="226"/></proof>
 <proof prover="2"><result status="valid" time="0.19" steps="36639"/></proof>
 </goal>
 <goal name="Imperative.create&#39;vc" expl="VC for create" proved="true">
 <proof prover="0"><result status="valid" time="0.04"/></proof>
 <proof prover="1"><result status="valid" time="0.01" steps="10"/></proof>
 <proof prover="2"><result status="valid" time="0.11" steps="27393"/></proof>
 <proof prover="3"><result status="valid" time="0.04" steps="131003"/></proof>
 </goal>
 <goal name="Imperative.is_empty&#39;vc" expl="VC for is_empty" proved="true">
 <proof prover="0"><result status="valid" time="0.05"/></proof>
 <proof prover="1"><result status="valid" time="0.01" steps="6"/></proof>
 <proof prover="2"><result status="valid" time="0.08" steps="25145"/></proof>
 <proof prover="3"><result status="valid" time="0.02" steps="9754"/></proof>
 </goal>
 <goal name="Imperative.bigger_father" proved="true">
 <proof prover="1"><result status="valid" time="5.89" steps="48650"/></proof>
 <proof prover="2"><result status="valid" time="0.53" steps="76322"/></proof>
 </goal>
 <goal name="Imperative.sub_order&#39;vc" expl="VC for sub_order" proved="true">
 <proof prover="1"><result status="valid" time="0.30" steps="2029"/></proof>
 </goal>
 <goal name="Imperative.sub_occ_1" proved="true">
 <proof prover="2"><result status="valid" time="0.61" steps="77848"/></proof>
 <proof prover="3"><result status="valid" time="1.72" steps="3370061"/></proof>
 </goal>
 <goal name="Imperative.sub_occ_2" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sub_occ_2.0" proved="true">
  <transf name="unfold" proved="true" arg1="numocc&#39;">
   <goal name="sub_occ_2.0.0" proved="true">
   <transf name="assert" proved="true" arg1="(numof a1 e 0 size1 = numof a1 e 0 i + numof a1 e i size1)">
    <goal name="sub_occ_2.0.0.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="0.03" steps="88"/></proof>
    </goal>
    <goal name="sub_occ_2.0.0.1" proved="true">
    <transf name="assert" proved="true" arg1="(numof a1 e 0 i = numof a2 e 0 i)">
     <goal name="sub_occ_2.0.0.1.0" expl="asserted formula" proved="true">
     <proof prover="2"><result status="valid" time="1.92" steps="161854"/></proof>
     </goal>
     <goal name="sub_occ_2.0.0.1.1" proved="true">
     <proof prover="3"><result status="valid" time="4.91" steps="8925472"/></proof>
     <transf name="assert" proved="true" arg1="(numof a1 e (i+1) size1 = numof a2 e (i+1) size2)">
      <goal name="sub_occ_2.0.0.1.1.0" expl="asserted formula" proved="true">
      <proof prover="2"><result status="valid" time="0.57" steps="88494"/></proof>
      </goal>
      <goal name="sub_occ_2.0.0.1.1.1" proved="true">
      <proof prover="3"><result status="valid" time="1.90" steps="4352873"/></proof>
      <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),abs,min,max,get,set,([]&#39;),([&lt;-]&#39;),(!),is_nil,length3,mem2,is_none,(++&#39;),reverse,rev_append1,num_occ,map1,([]&#39;&#39;&#39;),singleton,cons,snoc,(++),mem1,fst,snd,(%),is_pre_order,([]&#39;&#39;),mem,rev,append,rev_append,([]),numof1,le,is_heap,numocc,numocc&#39;,is_maximum,ancestor,children,pop,is_empty,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_le,Abs_pos,Min_r,Max_l,Min_comm,Max_comm,Min_assoc,Max_assoc,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,numof&#39;def,Numof_bounds,Empty,Full,numof_increasing,numof_strictly_increasing,numof_change_any,numof_change_some,numof_change_equiv,is_nil&#39;spec,Length_nonnegative,Length_nil,is_none&#39;spec,Append_assoc,Append_l_nil,Append_length,mem_append1,mem_decomp,reverse_append,reverse_cons,cons_reverse,reverse_reverse,reverse_mem,Reverse_length,rev_append_append_l,rev_append_length,rev_append_def,rev_append_append_r,Num_Occ_NonNeg,Mem_Num_Occ,Append_Num_Occ,reverse_num_occ,length_nonnegative,(==)&#39;spec,create&#39;spec,empty&#39;def,set&#39;spec,set&#39;def,([&lt;-])&#39;def,singleton&#39;spec,cons&#39;spec,snoc&#39;spec,([..])&#39;spec,([..])&#39;def,([_..])&#39;def,([.._])&#39;def,(++)&#39;spec,mem_append,mem_tail,same_location_eq,(~=)&#39;spec,cmp_eq,compare_pre_order,my_array&#39;invariant,to_list_range&#39;def,to_list_append,non_neg_max_array_length,array&#39;invariant,([&lt;-])&#39;spec,make_spec,pre_order_compare1,pre_order_compare,t&#39;invariant,max_def,num_exist,transativity,max_coherent,pop_occ_1,pop_occ_2,pop_order,is_empty&#39;spec,bigger_father,sub_order&#39;spec,sub_order&#39;def,sub_occ_1,H3,H2,h2">
       <goal name="sub_occ_2.0.0.1.1.1.0" proved="true">
       <proof prover="3" timelimit="1"><result status="valid" time="0.03" steps="65871"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Imperative.sub_occ_3" proved="true">
 <proof prover="2"><result status="valid" time="0.83" steps="76755"/></proof>
 <proof prover="3"><result status="valid" time="1.38" steps="3055376"/></proof>
 </goal>
 <goal name="Imperative.push_occ" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="push_occ.0" proved="true">
  <proof prover="2"><result status="valid" time="1.60" steps="142295"/></proof>
  </goal>
  <goal name="push_occ.1" proved="true">
  <proof prover="2"><result status="valid" time="1.81" steps="131339"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Imperative.push_order" proved="true">
 <proof prover="1"><result status="valid" time="0.17" steps="1074"/></proof>
 </goal>
 <goal name="Imperative.add&#39;vc" expl="VC for add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="add&#39;vc.0" expl="check division by zero" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="14"/></proof>
  <proof prover="2"><result status="valid" time="0.11" steps="28493"/></proof>
  <proof prover="3"><result status="valid" time="0.03" steps="11035"/></proof>
  </goal>
  <goal name="add&#39;vc.1" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="102"/></proof>
  <proof prover="2"><result status="valid" time="0.19" steps="33503"/></proof>
  <proof prover="3"><result status="valid" time="0.90" steps="2185751"/></proof>
  </goal>
  <goal name="add&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.35"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="16"/></proof>
  <proof prover="2"><result status="valid" time="0.19" steps="32252"/></proof>
  <proof prover="3"><result status="valid" time="0.07" steps="165311"/></proof>
  </goal>
  <goal name="add&#39;vc.3" expl="check division by zero" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="33"/></proof>
  <proof prover="2"><result status="valid" time="0.12" steps="29110"/></proof>
  <proof prover="3"><result status="valid" time="0.02" steps="11453"/></proof>
  </goal>
  <goal name="add&#39;vc.4" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="147"/></proof>
  <proof prover="2"><result status="valid" time="0.19" steps="38847"/></proof>
  <proof prover="3"><result status="valid" time="3.34" steps="7520820"/></proof>
  </goal>
  <goal name="add&#39;vc.5" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="150"/></proof>
  <proof prover="2"><result status="valid" time="0.19" steps="40328"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="172625"/></proof>
  </goal>
  <goal name="add&#39;vc.6" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="37"/></proof>
  <proof prover="2"><result status="valid" time="0.15" steps="31384"/></proof>
  <proof prover="3"><result status="valid" time="0.07" steps="168283"/></proof>
  </goal>
  <goal name="add&#39;vc.7" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  <proof prover="1"><result status="valid" time="0.01" steps="42"/></proof>
  <proof prover="2"><result status="valid" time="0.13" steps="30775"/></proof>
  <proof prover="3"><result status="valid" time="0.07" steps="164933"/></proof>
  </goal>
  <goal name="add&#39;vc.8" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.11"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="43"/></proof>
  <proof prover="2"><result status="valid" time="0.14" steps="31503"/></proof>
  <proof prover="3"><result status="valid" time="0.04" steps="169019"/></proof>
  </goal>
  <goal name="add&#39;vc.9" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="134"/></proof>
  <proof prover="2"><result status="valid" time="0.13" steps="40666"/></proof>
  <proof prover="3"><result status="valid" time="0.07" steps="169971"/></proof>
  </goal>
  <goal name="add&#39;vc.10" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.10.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="add&#39;vc.10.0.0" expl="precondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="add&#39;vc.10.0.0.0" expl="precondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="add&#39;vc.10.0.0.0.0" expl="precondition" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="add&#39;vc.10.0.0.0.0.0" expl="precondition" proved="true">
       <proof prover="1"><result status="valid" time="2.74" steps="15495"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="add&#39;vc.10.0.0.1" expl="precondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="add&#39;vc.10.0.0.1.0" expl="precondition" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="add&#39;vc.10.0.0.1.0.0" expl="precondition" proved="true">
       <proof prover="1"><result status="valid" time="1.60" steps="9970"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.11" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="168"/></proof>
  <proof prover="2"><result status="valid" time="0.16" steps="40947"/></proof>
  <proof prover="3"><result status="valid" time="0.09" steps="170759"/></proof>
  </goal>
  <goal name="add&#39;vc.12" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  <proof prover="1"><result status="valid" time="0.03" steps="52"/></proof>
  <proof prover="2"><result status="valid" time="0.15" steps="31633"/></proof>
  <proof prover="3"><result status="valid" time="0.05" steps="169613"/></proof>
  </goal>
  <goal name="add&#39;vc.13" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.87" steps="13097"/></proof>
  </goal>
  <goal name="add&#39;vc.14" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.27" steps="9580"/></proof>
  </goal>
  <goal name="add&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  <proof prover="1"><result status="valid" time="0.03" steps="60"/></proof>
  <proof prover="2"><result status="valid" time="0.08" steps="29732"/></proof>
  <proof prover="3"><result status="valid" time="0.03" steps="11851"/></proof>
  </goal>
  <goal name="add&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="60"/></proof>
  <proof prover="2"><result status="valid" time="0.10" steps="29680"/></proof>
  <proof prover="3"><result status="valid" time="0.03" steps="11831"/></proof>
  </goal>
  <goal name="add&#39;vc.17" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="(subst d d1 i (size h2) (size h2))">
   <goal name="add&#39;vc.17.0" expl="asserted formula" proved="true">
   <proof prover="1"><result status="valid" time="1.10" steps="3641"/></proof>
   </goal>
   <goal name="add&#39;vc.17.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.80" steps="3882"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="61"/></proof>
  <proof prover="2"><result status="valid" time="0.12" steps="31439"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="174598"/></proof>
  </goal>
  <goal name="add&#39;vc.19" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.19.0" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(subst d d1 i (size h1) (size h1))">
    <goal name="add&#39;vc.19.0.0" expl="asserted formula" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="add&#39;vc.19.0.0.0" expl="asserted formula" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="add&#39;vc.19.0.0.0.0" proved="true">
      <proof prover="1"><result status="valid" time="0.03" steps="56"/></proof>
      <proof prover="2"><result status="valid" time="0.10" steps="44994"/></proof>
      <proof prover="3"><result status="valid" time="0.03" steps="16947"/></proof>
      </goal>
      <goal name="add&#39;vc.19.0.0.0.1" proved="true">
      <proof prover="1"><result status="valid" time="0.03" steps="56"/></proof>
      <proof prover="2"><result status="valid" time="0.11" steps="44996"/></proof>
      <proof prover="3"><result status="valid" time="0.02" steps="16951"/></proof>
      </goal>
      <goal name="add&#39;vc.19.0.0.0.2" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="add&#39;vc.19.0.0.0.2.0" proved="true">
       <proof prover="1"><result status="valid" time="0.05" steps="56"/></proof>
       <proof prover="2"><result status="valid" time="0.14" steps="46725"/></proof>
       <proof prover="3"><result status="valid" time="0.07" steps="229918"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="add&#39;vc.19.0.0.0.3" proved="true">
      <proof prover="1"><result status="valid" time="0.96" steps="4271"/></proof>
      <proof prover="2"><result status="valid" time="0.25" steps="60470"/></proof>
      <proof prover="3"><result status="valid" time="0.07" steps="236209"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="add&#39;vc.19.0.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="1.59" steps="5587"/></proof>
    <proof prover="2"><result status="valid" time="0.21" steps="49845"/></proof>
    <proof prover="3"><result status="valid" time="0.08" steps="184796"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="add&#39;vc.19.1" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(subst d d1 i (size h2) (size h2))">
    <goal name="add&#39;vc.19.1.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="1.02" steps="3839"/></proof>
    </goal>
    <goal name="add&#39;vc.19.1.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.51" steps="2473"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="add&#39;vc.19.2" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(subst d d1 i (size h1) (size h1))">
    <goal name="add&#39;vc.19.2.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="1.06" steps="3902"/></proof>
    </goal>
    <goal name="add&#39;vc.19.2.1" expl="postcondition" proved="true">
    <transf name="case" proved="true" arg1="(d1[i]&#39;&#39; = d[i]&#39;&#39;)">
     <goal name="add&#39;vc.19.2.1.0" expl="true case (postcondition)" proved="true">
     <proof prover="1"><result status="valid" time="0.49" steps="2522"/></proof>
     <proof prover="2"><result status="valid" time="1.40" steps="124699"/></proof>
     </goal>
     <goal name="add&#39;vc.19.2.1.1" expl="false case (postcondition)" proved="true">
     <transf name="instantiate" proved="true" arg1="sub_occ_2" arg2="d1,d,i,h2.size,h2.size">
      <goal name="add&#39;vc.19.2.1.1.0" expl="false case (postcondition)" proved="true">
      <transf name="destruct_rec" proved="true" arg1="Hinst">
       <goal name="add&#39;vc.19.2.1.1.0.0" expl="destruct premise" proved="true">
       <proof prover="1"><result status="valid" time="0.03" steps="60"/></proof>
       <proof prover="2"><result status="valid" time="0.11" steps="31540"/></proof>
       </goal>
       <goal name="add&#39;vc.19.2.1.1.0.1" expl="destruct premise" proved="true">
       <proof prover="1"><result status="valid" time="0.02" steps="60"/></proof>
       <proof prover="2"><result status="valid" time="0.08" steps="29841"/></proof>
       </goal>
       <goal name="add&#39;vc.19.2.1.1.0.2" expl="destruct premise" proved="true">
       <proof prover="1"><result status="valid" time="0.14" steps="895"/></proof>
       <proof prover="2"><result status="valid" time="0.28" steps="50782"/></proof>
       </goal>
       <goal name="add&#39;vc.19.2.1.1.0.3" expl="destruct premise" proved="true">
       <proof prover="1"><result status="valid" time="0.03" steps="60"/></proof>
       <proof prover="2"><result status="valid" time="0.10" steps="29845"/></proof>
       </goal>
       <goal name="add&#39;vc.19.2.1.1.0.4" expl="false case (postcondition)" proved="true">
       <proof prover="1"><result status="valid" time="0.60" steps="2919"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.20" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="33"/></proof>
  <proof prover="2"><result status="valid" time="0.09" steps="31396"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="168331"/></proof>
  </goal>
  <goal name="add&#39;vc.21" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  <proof prover="1"><result status="valid" time="0.04" steps="38"/></proof>
  <proof prover="2"><result status="valid" time="0.15" steps="30791"/></proof>
  <proof prover="3"><result status="valid" time="0.07" steps="165010"/></proof>
  </goal>
  <goal name="add&#39;vc.22" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.10"/></proof>
  <proof prover="1"><result status="valid" time="0.04" steps="39"/></proof>
  <proof prover="2"><result status="valid" time="0.14" steps="31519"/></proof>
  <proof prover="3"><result status="valid" time="0.07" steps="169096"/></proof>
  </goal>
  <goal name="add&#39;vc.23" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.35" steps="1882"/></proof>
  </goal>
  <goal name="add&#39;vc.24" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="4.02" steps="29702"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.24.0" expl="postcondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="add&#39;vc.24.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="add&#39;vc.24.0.0.0" expl="postcondition" proved="true">
     <proof prover="1"><result status="valid" time="1.25" steps="8597"/></proof>
     </goal>
     <goal name="add&#39;vc.24.0.0.1" expl="postcondition" proved="true">
     <proof prover="1"><result status="valid" time="1.29" steps="8844"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.25" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.25.0" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(subst (data h1) (data h) i (size h) (size h))">
    <goal name="add&#39;vc.25.0.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="0.49" steps="3508"/></proof>
    </goal>
    <goal name="add&#39;vc.25.0.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.26" steps="1811"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.26" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="46"/></proof>
  <proof prover="2"><result status="valid" time="0.08" steps="29448"/></proof>
  <proof prover="3"><result status="valid" time="0.03" steps="11685"/></proof>
  </goal>
  <goal name="add&#39;vc.27" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.27.0" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(subst d d1 i (size h) (size h))">
    <goal name="add&#39;vc.27.0.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="0.58" steps="3226"/></proof>
    </goal>
    <goal name="add&#39;vc.27.0.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.16" steps="1405"/></proof>
    <proof prover="2"><result status="valid" time="0.16" steps="35846"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="add&#39;vc.27.1" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(subst d d1 i (size h) (size h))">
    <goal name="add&#39;vc.27.1.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="0.48" steps="3059"/></proof>
    </goal>
    <goal name="add&#39;vc.27.1.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.29" steps="1320"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="add&#39;vc.27.2" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(subst d d1 i (size h) (size h))">
    <goal name="add&#39;vc.27.2.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="0.51" steps="3059"/></proof>
    </goal>
    <goal name="add&#39;vc.27.2.1" expl="postcondition" proved="true">
    <transf name="case" proved="true" arg1="(d1[i]&#39;&#39; = d[i]&#39;&#39;)">
     <goal name="add&#39;vc.27.2.1.0" expl="true case (postcondition)" proved="true">
     <proof prover="1"><result status="valid" time="0.29" steps="1195"/></proof>
     </goal>
     <goal name="add&#39;vc.27.2.1.1" expl="false case (postcondition)" proved="true">
     <transf name="instantiate" proved="true" arg1="sub_occ_2" arg2="d1,d,i,h2.size,h2.size">
      <goal name="add&#39;vc.27.2.1.1.0" expl="false case (postcondition)" proved="true">
      <transf name="destruct_rec" proved="true" arg1="Hinst">
       <goal name="add&#39;vc.27.2.1.1.0.0" expl="destruct premise" proved="true">
       <proof prover="1"><result status="valid" time="0.02" steps="48"/></proof>
       <proof prover="2"><result status="valid" time="0.11" steps="31103"/></proof>
       </goal>
       <goal name="add&#39;vc.27.2.1.1.0.1" expl="destruct premise" proved="true">
       <proof prover="1"><result status="valid" time="0.02" steps="48"/></proof>
       <proof prover="2"><result status="valid" time="0.07" steps="29494"/></proof>
       </goal>
       <goal name="add&#39;vc.27.2.1.1.0.2" expl="destruct premise" proved="true">
       <proof prover="1"><result status="valid" time="0.54" steps="3172"/></proof>
       <proof prover="2"><result status="valid" time="0.17" steps="35055"/></proof>
       </goal>
       <goal name="add&#39;vc.27.2.1.1.0.3" expl="destruct premise" proved="true">
       <proof prover="1"><result status="valid" time="0.03" steps="48"/></proof>
       <proof prover="2"><result status="valid" time="0.11" steps="29512"/></proof>
       </goal>
       <goal name="add&#39;vc.27.2.1.1.0.4" expl="false case (postcondition)" proved="true">
       <proof prover="1"><result status="valid" time="0.02" steps="52"/></proof>
       <proof prover="2"><result status="valid" time="0.12" steps="31275"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.28" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.29"/></proof>
  <proof prover="1"><result status="valid" time="0.03" steps="56"/></proof>
  <proof prover="2"><result status="valid" time="0.15" steps="32188"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="162668"/></proof>
  </goal>
  <goal name="add&#39;vc.29" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.10"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="20"/></proof>
  <proof prover="2"><result status="valid" time="0.12" steps="30687"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="163795"/></proof>
  </goal>
  <goal name="add&#39;vc.30" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.47" steps="3320"/></proof>
  </goal>
  <goal name="add&#39;vc.31" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="63"/></proof>
  <proof prover="2"><result status="valid" time="0.18" steps="32627"/></proof>
  <proof prover="3"><result status="valid" time="0.09" steps="169444"/></proof>
  </goal>
  <goal name="add&#39;vc.32" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="27"/></proof>
  <proof prover="2"><result status="valid" time="0.12" steps="30816"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="170092"/></proof>
  </goal>
  <goal name="add&#39;vc.33" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="29"/></proof>
  <proof prover="2"><result status="valid" time="0.11" steps="30329"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="166885"/></proof>
  </goal>
  <goal name="add&#39;vc.34" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="30"/></proof>
  <proof prover="2"><result status="valid" time="0.12" steps="30423"/></proof>
  <proof prover="3"><result status="valid" time="0.07" steps="172208"/></proof>
  </goal>
  <goal name="add&#39;vc.35" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="34"/></proof>
  <proof prover="2"><result status="valid" time="0.09" steps="29167"/></proof>
  </goal>
  <goal name="add&#39;vc.36" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.36.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="add&#39;vc.36.0.0" expl="postcondition" proved="true">
    <transf name="destruct" proved="true" arg1="H1">
     <goal name="add&#39;vc.36.0.0.0" expl="postcondition" proved="true">
     <transf name="assert" proved="true" arg1="(push h2.data h1.data h2.size h1.size)">
      <goal name="add&#39;vc.36.0.0.0.0" expl="asserted formula" proved="true">
      <proof prover="1"><result status="valid" time="0.45" steps="2198"/></proof>
      </goal>
      <goal name="add&#39;vc.36.0.0.0.1" expl="postcondition" proved="true">
      <proof prover="1"><result status="valid" time="0.03" steps="146"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="add&#39;vc.36.0.0.1" expl="postcondition" proved="true">
     <transf name="instantiate" proved="true" arg1="push_occ" arg2="d1,d,h2.size,h.size">
      <goal name="add&#39;vc.36.0.0.1.0" expl="postcondition" proved="true">
      <transf name="destruct_rec" proved="true" arg1="Hinst">
       <goal name="add&#39;vc.36.0.0.1.0.0" expl="destruct premise" proved="true">
       <proof prover="1"><result status="valid" time="1.17" steps="4565"/></proof>
       </goal>
       <goal name="add&#39;vc.36.0.0.1.0.1" expl="destruct premise" proved="true">
       <proof prover="1"><result status="valid" time="0.04" steps="122"/></proof>
       <proof prover="2"><result status="valid" time="0.16" steps="33975"/></proof>
       </goal>
       <goal name="add&#39;vc.36.0.0.1.0.2" expl="postcondition" proved="true">
       <proof prover="1"><result status="valid" time="0.03" steps="216"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.37" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.37.0" expl="postcondition" proved="true">
   <transf name="case" proved="true" arg1="(e = get1 (data h1) n )">
    <goal name="add&#39;vc.37.0.0" expl="true case (postcondition)" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="add&#39;vc.37.0.0.0" expl="true case (postcondition)" proved="true">
     <transf name="destruct" proved="true" arg1="H3">
      <goal name="add&#39;vc.37.0.0.0.0" expl="true case (postcondition)" proved="true">
      <transf name="assert" proved="true" arg1="(push h3.data h2.data h3.size h2.size)">
       <goal name="add&#39;vc.37.0.0.0.0.0" expl="asserted formula" proved="true">
       <proof prover="1"><result status="valid" time="0.02" steps="34"/></proof>
       </goal>
       <goal name="add&#39;vc.37.0.0.0.0.1" expl="true case (postcondition)" proved="true">
       <proof prover="1"><result status="valid" time="0.02" steps="34"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="add&#39;vc.37.0.0.0.1" expl="true case (postcondition)" proved="true">
      <transf name="assert" proved="true" arg1="(push h3.data h2.data h3.size h2.size)">
       <goal name="add&#39;vc.37.0.0.0.1.0" expl="asserted formula" proved="true">
       <proof prover="1"><result status="valid" time="1.58" steps="5955"/></proof>
       </goal>
       <goal name="add&#39;vc.37.0.0.0.1.1" expl="true case (postcondition)" proved="true">
       <proof prover="1"><result status="valid" time="0.03" steps="189"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="add&#39;vc.37.0.1" expl="false case (postcondition)" proved="true">
    <transf name="instantiate" proved="true" arg1="H5" arg2="e">
     <goal name="add&#39;vc.37.0.1.0" expl="false case (postcondition)" proved="true">
     <transf name="destruct_rec" proved="true" arg1="Hinst">
      <goal name="add&#39;vc.37.0.1.0.0" expl="destruct premise" proved="true">
      <proof prover="1"><result status="valid" time="0.02" steps="34"/></proof>
      <proof prover="2"><result status="valid" time="0.08" steps="29129"/></proof>
      </goal>
      <goal name="add&#39;vc.37.0.1.0.1" expl="destruct premise" proved="true">
      <proof prover="1"><result status="valid" time="0.02" steps="35"/></proof>
      <proof prover="2"><result status="valid" time="0.11" steps="29228"/></proof>
      </goal>
      <goal name="add&#39;vc.37.0.1.0.2" expl="false case (postcondition)" proved="true">
      <transf name="assert" proved="true" arg1="(push h3.data h2.data h3.size h2.size)">
       <goal name="add&#39;vc.37.0.1.0.2.0" expl="asserted formula" proved="true">
       <transf name="unfold" proved="true" arg1="push">
        <goal name="add&#39;vc.37.0.1.0.2.0.0" proved="true">
        <proof prover="1"><result status="valid" time="1.75" steps="7402"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="add&#39;vc.37.0.1.0.2.1" expl="false case (postcondition)" proved="true">
       <proof prover="1"><result status="valid" time="0.15" steps="713"/></proof>
       <proof prover="2"><result status="valid" time="0.29" steps="42444"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.38" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="36"/></proof>
  <proof prover="2"><result status="valid" time="0.11" steps="30723"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="168174"/></proof>
  </goal>
  <goal name="add&#39;vc.39" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="37"/></proof>
  <proof prover="2"><result status="valid" time="0.10" steps="29249"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Imperative.maximum&#39;vc" expl="VC for maximum" proved="true">
 <proof prover="1"><result status="valid" time="0.03" steps="78"/></proof>
 </goal>
 <goal name="Imperative.remove&#39;vc" expl="VC for remove" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="remove&#39;vc.0" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.19"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="16"/></proof>
  <proof prover="2"><result status="valid" time="0.18" steps="31257"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="160350"/></proof>
  </goal>
  <goal name="remove&#39;vc.1" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="16"/></proof>
  <proof prover="2"><result status="valid" time="0.16" steps="32218"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="165222"/></proof>
  </goal>
  <goal name="remove&#39;vc.2" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="32"/></proof>
  <proof prover="2"><result status="valid" time="0.15" steps="30971"/></proof>
  <proof prover="3"><result status="valid" time="0.05" steps="171583"/></proof>
  </goal>
  <goal name="remove&#39;vc.3" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="32"/></proof>
  <proof prover="2"><result status="valid" time="0.13" steps="30978"/></proof>
  <proof prover="3"><result status="valid" time="0.09" steps="168847"/></proof>
  </goal>
  <goal name="remove&#39;vc.4" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="39"/></proof>
  <proof prover="2"><result status="valid" time="0.19" steps="31206"/></proof>
  <proof prover="3"><result status="valid" time="1.85" steps="4197850"/></proof>
  </goal>
  <goal name="remove&#39;vc.5" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="41"/></proof>
  <proof prover="2"><result status="valid" time="0.13" steps="31271"/></proof>
  <proof prover="3"><result status="valid" time="3.65" steps="6871494"/></proof>
  </goal>
  <goal name="remove&#39;vc.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.25"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="32"/></proof>
  <proof prover="2"><result status="valid" time="0.11" steps="31187"/></proof>
  <proof prover="3"><result status="valid" time="0.08" steps="166615"/></proof>
  </goal>
  <goal name="remove&#39;vc.7" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="37"/></proof>
  <proof prover="2"><result status="valid" time="0.10" steps="30577"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="163169"/></proof>
  </goal>
  <goal name="remove&#39;vc.8" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.07"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="38"/></proof>
  <proof prover="2"><result status="valid" time="0.12" steps="31305"/></proof>
  <proof prover="3"><result status="valid" time="0.07" steps="167300"/></proof>
  </goal>
  <goal name="remove&#39;vc.9" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.9.0" expl="variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="0.23"/></proof>
   <proof prover="1"><result status="valid" time="0.02" steps="37"/></proof>
   <proof prover="2"><result status="valid" time="0.09" steps="30562"/></proof>
   <proof prover="3"><result status="valid" time="0.07" steps="163442"/></proof>
   </goal>
   <goal name="remove&#39;vc.9.1" expl="variant decrease" proved="true">
   <transf name="assert" proved="true" arg1="(j &gt; i)">
    <goal name="remove&#39;vc.9.1.0" expl="asserted formula" proved="true">
    <transf name="assert" proved="true" arg1="(j = j1 \/ j = j&#39;)">
     <goal name="remove&#39;vc.9.1.0.0" expl="asserted formula" proved="true">
     <proof prover="0"><result status="valid" time="0.07"/></proof>
     <proof prover="1"><result status="valid" time="0.02" steps="37"/></proof>
     <proof prover="2"><result status="valid" time="0.12" steps="30555"/></proof>
     <proof prover="3"><result status="valid" time="0.03" steps="16576"/></proof>
     </goal>
     <goal name="remove&#39;vc.9.1.0.1" expl="asserted formula" proved="true">
     <proof prover="1"><result status="valid" time="0.02" steps="39"/></proof>
     <proof prover="2"><result status="valid" time="0.12" steps="30688"/></proof>
     <proof prover="3"><result status="valid" time="4.10" steps="8339380"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="remove&#39;vc.9.1.1" expl="variant decrease" proved="true">
    <proof prover="1"><result status="valid" time="0.02" steps="39"/></proof>
    <proof prover="2"><result status="valid" time="0.08" steps="29173"/></proof>
    <proof prover="3"><result status="valid" time="0.04" steps="92334"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.10" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="41"/></proof>
  <proof prover="2"><result status="valid" time="0.15" steps="31356"/></proof>
  <proof prover="3"><result status="valid" time="0.07" steps="167491"/></proof>
  </goal>
  <goal name="remove&#39;vc.11" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.39" steps="2165"/></proof>
  </goal>
  <goal name="remove&#39;vc.12" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.12.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="5.39" steps="37097"/></proof>
   </goal>
   <goal name="remove&#39;vc.12.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="4.45" steps="32329"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.13" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="55"/></proof>
  <proof prover="2"><result status="valid" time="0.15" steps="30934"/></proof>
  </goal>
  <goal name="remove&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="57"/></proof>
  <proof prover="2"><result status="valid" time="0.09" steps="29504"/></proof>
  <proof prover="3"><result status="valid" time="0.02" steps="11692"/></proof>
  </goal>
  <goal name="remove&#39;vc.15" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="(subst d d1 i h1.size h1.size)">
   <goal name="remove&#39;vc.15.0" expl="asserted formula" proved="true">
   <transf name="unfold" proved="true" arg1="subst">
    <goal name="remove&#39;vc.15.0.0" proved="true">
    <proof prover="1"><result status="valid" time="1.30" steps="5342"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="remove&#39;vc.15.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.29" steps="8642"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.16" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.16.0" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(subst d d1 i h1.size h1.size)">
    <goal name="remove&#39;vc.16.0.0" expl="asserted formula" proved="true">
    <transf name="unfold" proved="true" arg1="subst">
     <goal name="remove&#39;vc.16.0.0.0" proved="true">
     <proof prover="1"><result status="valid" time="2.74" steps="13960"/></proof>
     <proof prover="2"><result status="valid" time="1.48" steps="132729"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="remove&#39;vc.16.0.1" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.30" steps="51537"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="remove&#39;vc.16.1" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(subst d d1 i h1.size h1.size)">
    <goal name="remove&#39;vc.16.1.0" expl="asserted formula" proved="true">
    <transf name="unfold" proved="true" arg1="subst">
     <goal name="remove&#39;vc.16.1.0.0" proved="true">
     <proof prover="1"><result status="valid" time="1.62" steps="5969"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="remove&#39;vc.16.1.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.73" steps="4370"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="remove&#39;vc.16.2" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(subst d d1 i h1.size h1.size)">
    <goal name="remove&#39;vc.16.2.0" expl="asserted formula" proved="true">
    <transf name="unfold" proved="true" arg1="subst">
     <goal name="remove&#39;vc.16.2.0.0" proved="true">
     <proof prover="1"><result status="valid" time="1.44" steps="5969"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="remove&#39;vc.16.2.1" expl="postcondition" proved="true">
    <transf name="case" proved="true" arg1="(d1[i]&#39;&#39; = d[i]&#39;&#39;)">
     <goal name="remove&#39;vc.16.2.1.0" expl="true case (postcondition)" proved="true">
     <proof prover="1"><result status="valid" time="0.73" steps="4607"/></proof>
     <proof prover="2"><result status="valid" time="1.45" steps="108841"/></proof>
     </goal>
     <goal name="remove&#39;vc.16.2.1.1" expl="false case (postcondition)" proved="true">
     <transf name="instantiate" proved="true" arg1="sub_occ_2" arg2="d1,d,i,h4.size,h4.size">
      <goal name="remove&#39;vc.16.2.1.1.0" expl="false case (postcondition)" proved="true">
      <transf name="destruct_rec" proved="true" arg1="Hinst">
       <goal name="remove&#39;vc.16.2.1.1.0.0" expl="destruct premise" proved="true">
       <proof prover="1"><result status="valid" time="0.03" steps="57"/></proof>
       </goal>
       <goal name="remove&#39;vc.16.2.1.1.0.1" expl="destruct premise" proved="true">
       <proof prover="1"><result status="valid" time="0.02" steps="57"/></proof>
       </goal>
       <goal name="remove&#39;vc.16.2.1.1.0.2" expl="destruct premise" proved="true">
       <proof prover="1"><result status="valid" time="4.05" steps="25116"/></proof>
       </goal>
       <goal name="remove&#39;vc.16.2.1.1.0.3" expl="destruct premise" proved="true">
       <proof prover="1"><result status="valid" time="0.03" steps="57"/></proof>
       </goal>
       <goal name="remove&#39;vc.16.2.1.1.0.4" expl="false case (postcondition)" proved="true">
       <proof prover="1"><result status="valid" time="1.18" steps="6512"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.17" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.26"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="32"/></proof>
  <proof prover="2"><result status="valid" time="0.13" steps="31193"/></proof>
  <proof prover="3"><result status="valid" time="0.08" steps="166566"/></proof>
  </goal>
  <goal name="remove&#39;vc.18" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="37"/></proof>
  <proof prover="2"><result status="valid" time="0.13" steps="30583"/></proof>
  <proof prover="3"><result status="valid" time="0.07" steps="163146"/></proof>
  </goal>
  <goal name="remove&#39;vc.19" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  <proof prover="1"><result status="valid" time="0.03" steps="38"/></proof>
  <proof prover="2"><result status="valid" time="0.12" steps="31311"/></proof>
  <proof prover="3"><result status="valid" time="0.08" steps="167277"/></proof>
  </goal>
  <goal name="remove&#39;vc.20" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="3.41" steps="28462"/></proof>
  </goal>
  <goal name="remove&#39;vc.21" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.21.0" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(subst d d1 i h1.size h1.size)">
    <goal name="remove&#39;vc.21.0.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="0.43" steps="2363"/></proof>
    </goal>
    <goal name="remove&#39;vc.21.0.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.06" steps="337"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="remove&#39;vc.21.1" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(subst d d1 i h1.size h1.size)">
    <goal name="remove&#39;vc.21.1.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="0.19" steps="1502"/></proof>
    </goal>
    <goal name="remove&#39;vc.21.1.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.04" steps="310"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.22" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.22.0" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(subst d d1 i h1.size h1.size)">
    <goal name="remove&#39;vc.22.0.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="0.56" steps="3781"/></proof>
    </goal>
    <goal name="remove&#39;vc.22.0.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.12" steps="1031"/></proof>
    <proof prover="2"><result status="valid" time="0.16" steps="35594"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="remove&#39;vc.22.1" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(subst d d1 i h1.size h1.size)">
    <goal name="remove&#39;vc.22.1.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="0.51" steps="3818"/></proof>
    </goal>
    <goal name="remove&#39;vc.22.1.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.14" steps="1237"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="remove&#39;vc.22.2" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(subst d d1 i h1.size h1.size)">
    <goal name="remove&#39;vc.22.2.0" expl="asserted formula" proved="true">
    <transf name="unfold" proved="true" arg1="subst">
     <goal name="remove&#39;vc.22.2.0.0" proved="true">
     <proof prover="1"><result status="valid" time="0.29" steps="1763"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="remove&#39;vc.22.2.1" expl="postcondition" proved="true">
    <transf name="case" proved="true" arg1="(d1[i]&#39;&#39; = d[i]&#39;&#39;)">
     <goal name="remove&#39;vc.22.2.1.0" expl="true case (postcondition)" proved="true">
     <proof prover="1"><result status="valid" time="0.07" steps="433"/></proof>
     </goal>
     <goal name="remove&#39;vc.22.2.1.1" expl="false case (postcondition)" proved="true">
     <proof prover="2"><result status="valid" time="0.49" steps="69686"/></proof>
     <transf name="instantiate" proved="true" arg1="sub_occ_2" arg2="d1,d,i,h4.size,h4.size">
      <goal name="remove&#39;vc.22.2.1.1.0" expl="false case (postcondition)" proved="true">
      <proof prover="1"><result status="valid" time="2.85" steps="10634"/></proof>
      <proof prover="2"><result status="valid" time="0.82" steps="91229"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.23" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.26"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="30"/></proof>
  <proof prover="2"><result status="valid" time="0.15" steps="30927"/></proof>
  <proof prover="3"><result status="valid" time="0.08" steps="165216"/></proof>
  </goal>
  <goal name="remove&#39;vc.24" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.05"/></proof>
  <proof prover="1"><result status="valid" time="0.03" steps="35"/></proof>
  <proof prover="2"><result status="valid" time="0.13" steps="30319"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="161983"/></proof>
  </goal>
  <goal name="remove&#39;vc.25" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.10"/></proof>
  <proof prover="1"><result status="valid" time="0.03" steps="36"/></proof>
  <proof prover="2"><result status="valid" time="0.13" steps="31047"/></proof>
  <proof prover="3"><result status="valid" time="0.08" steps="165976"/></proof>
  </goal>
  <goal name="remove&#39;vc.26" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.69" steps="3880"/></proof>
  </goal>
  <goal name="remove&#39;vc.27" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.27.0" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(subst d d1 i h1.size h1.size)">
    <goal name="remove&#39;vc.27.0.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="0.14" steps="600"/></proof>
    </goal>
    <goal name="remove&#39;vc.27.0.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.06" steps="274"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.28" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.28.0" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(subst d d1 i h1.size h1.size)">
    <goal name="remove&#39;vc.28.0.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="0.15" steps="630"/></proof>
    </goal>
    <goal name="remove&#39;vc.28.0.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.16" steps="1099"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="remove&#39;vc.28.1" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(subst d d1 i h1.size h1.size)">
    <goal name="remove&#39;vc.28.1.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="0.13" steps="626"/></proof>
    </goal>
    <goal name="remove&#39;vc.28.1.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.16" steps="1056"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="remove&#39;vc.28.2" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(subst d d1 i h1.size h1.size)">
    <goal name="remove&#39;vc.28.2.0" expl="asserted formula" proved="true">
    <transf name="unfold" proved="true" arg1="subst">
     <goal name="remove&#39;vc.28.2.0.0" proved="true">
     <proof prover="1"><result status="valid" time="0.13" steps="494"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="remove&#39;vc.28.2.1" expl="postcondition" proved="true">
    <transf name="case" proved="true" arg1="(d1[i]&#39;&#39; = d[i]&#39;&#39;)">
     <goal name="remove&#39;vc.28.2.1.0" expl="true case (postcondition)" proved="true">
     <proof prover="1"><result status="valid" time="0.07" steps="761"/></proof>
     </goal>
     <goal name="remove&#39;vc.28.2.1.1" expl="false case (postcondition)" proved="true">
     <proof prover="2"><result status="valid" time="0.50" steps="61145"/></proof>
     <transf name="instantiate" proved="true" arg1="sub_occ_2" arg2="d1,d,i,h4.size,h4.size">
      <goal name="remove&#39;vc.28.2.1.1.0" expl="false case (postcondition)" proved="true">
      <proof prover="1"><result status="valid" time="2.87" steps="9387"/></proof>
      <proof prover="2"><result status="valid" time="0.46" steps="78097"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.29" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="16"/></proof>
  </goal>
  <goal name="remove&#39;vc.30" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="19"/></proof>
  </goal>
  <goal name="remove&#39;vc.31" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.33"/></proof>
  <proof prover="1"><result status="valid" time="0.03" steps="23"/></proof>
  <proof prover="2"><result status="valid" time="0.15" steps="32470"/></proof>
  <proof prover="3"><result status="valid" time="0.07" steps="171714"/></proof>
  </goal>
  <goal name="remove&#39;vc.32" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.11"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="22"/></proof>
  <proof prover="2"><result status="valid" time="0.07" steps="28817"/></proof>
  <proof prover="3"><result status="valid" time="0.04" steps="11127"/></proof>
  </goal>
  <goal name="remove&#39;vc.33" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.69"/></proof>
  <proof prover="1"><result status="valid" time="0.03" steps="103"/></proof>
  <proof prover="2"><result status="valid" time="0.13" steps="33424"/></proof>
  <proof prover="3"><result status="valid" time="1.55" steps="3485641"/></proof>
  </goal>
  <goal name="remove&#39;vc.34" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.34.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="21"/></proof>
   </goal>
   <goal name="remove&#39;vc.34.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="21"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.35" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="30"/></proof>
  </goal>
  <goal name="remove&#39;vc.36" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.36.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.73" steps="3315"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.37" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.93" steps="4539"/></proof>
  </goal>
  <goal name="remove&#39;vc.38" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.11"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="34"/></proof>
  <proof prover="2"><result status="valid" time="0.13" steps="30455"/></proof>
  <proof prover="3"><result status="valid" time="0.08" steps="172686"/></proof>
  </goal>
  <goal name="remove&#39;vc.39" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.27"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="16"/></proof>
  <proof prover="2"><result status="valid" time="0.06" steps="28515"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="158267"/></proof>
  </goal>
  <goal name="remove&#39;vc.40" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="21"/></proof>
  <proof prover="2"><result status="valid" time="0.13" steps="32283"/></proof>
  <proof prover="3"><result status="valid" time="0.08" steps="165313"/></proof>
  </goal>
  <goal name="remove&#39;vc.41" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="57"/></proof>
  </goal>
  <goal name="remove&#39;vc.42" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="198"/></proof>
  </goal>
  <goal name="remove&#39;vc.43" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="242"/></proof>
  </goal>
  <goal name="remove&#39;vc.44" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="26"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Imperative.pop_maximum&#39;vc" expl="VC for pop_maximum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pop_maximum&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="12"/></proof>
  </goal>
  <goal name="pop_maximum&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="14"/></proof>
  </goal>
  <goal name="pop_maximum&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="28"/></proof>
  </goal>
  <goal name="pop_maximum&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="28"/></proof>
  </goal>
  <goal name="pop_maximum&#39;vc.4" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="pop_maximum&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(m = h1.data[0]&#39;&#39;)">
    <goal name="pop_maximum&#39;vc.4.0.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="0.03" steps="22"/></proof>
    </goal>
    <goal name="pop_maximum&#39;vc.4.0.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.03" steps="44"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pop_maximum&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="28"/></proof>
  </goal>
  <goal name="pop_maximum&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="29"/></proof>
  </goal>
  <goal name="pop_maximum&#39;vc.7" expl="exceptional postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="32"/></proof>
  </goal>
  <goal name="pop_maximum&#39;vc.8" expl="exceptional postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="14"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
