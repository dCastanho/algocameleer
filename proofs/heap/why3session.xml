<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Eprover" version="2.5" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.4.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.6" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.8.7" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="ocaml" proved="true">
<path name=".."/><path name="heap.ml"/>
<theory name="Heap" proved="true">
 <goal name="Imperative.t&#39;vc" expl="VC for t" proved="true">
 <proof prover="0"><result status="valid" time="0.10"/></proof>
 </goal>
 <goal name="Imperative.num_exist" proved="true">
 <proof prover="1"><result status="valid" time="0.39" steps="1926"/></proof>
 </goal>
 <goal name="Imperative.ancestor_f&#39;vc" expl="VC for ancestor_f" proved="true">
 <proof prover="1"><result status="valid" time="5.73" steps="49719"/></proof>
 <proof prover="2"><result status="valid" time="0.47" steps="74269"/></proof>
 </goal>
 <goal name="Imperative.children_f&#39;vc" expl="VC for children_f" proved="true">
 <proof prover="1"><result status="valid" time="0.03" steps="56"/></proof>
 <proof prover="2"><result status="valid" time="0.16" steps="28175"/></proof>
 </goal>
 <goal name="Imperative.transativity" proved="true">
 <proof prover="1"><result status="valid" time="0.07" steps="404"/></proof>
 </goal>
 <goal name="Imperative.max_coherent&#39;vc" expl="VC for max_coherent" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="max_coherent&#39;vc.0" expl="check division by zero" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="max_coherent&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="54"/></proof>
  </goal>
  <goal name="max_coherent&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="64"/></proof>
  </goal>
  <goal name="max_coherent&#39;vc.3" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="(is_heap s n)">
   <goal name="max_coherent&#39;vc.3.0" expl="asserted formula" proved="true">
   <proof prover="1"><result status="valid" time="0.01" steps="18"/></proof>
   </goal>
   <goal name="max_coherent&#39;vc.3.1" expl="postcondition" proved="true">
   <transf name="unfold" proved="true" arg1="is_heap" arg2="in" arg3="h">
    <goal name="max_coherent&#39;vc.3.1.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.39" steps="2718"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="max_coherent&#39;vc.4" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="max_coherent&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="59"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Imperative.pop_occ_1" proved="true">
 <proof prover="3"><result status="valid" time="1.64" steps="4123677"/></proof>
 </goal>
 <goal name="Imperative.pop_occ_2" proved="true">
 <proof prover="1"><result status="valid" time="6.41" steps="24227"/></proof>
 <proof prover="3"><result status="valid" time="1.73" steps="4115555"/></proof>
 </goal>
 <goal name="Imperative.pop_order" proved="true">
 <proof prover="1"><result status="valid" time="0.03" steps="14"/></proof>
 <proof prover="2"><result status="valid" time="0.19" steps="28132"/></proof>
 </goal>
 <goal name="Imperative.create&#39;vc" expl="VC for create" proved="true">
 <proof prover="1"><result status="valid" time="0.01" steps="39"/></proof>
 <proof prover="2"><result status="valid" time="0.11" steps="28872"/></proof>
 <proof prover="3"><result status="valid" time="0.04" steps="135570"/></proof>
 </goal>
 <goal name="Imperative.is_empty&#39;vc" expl="VC for is_empty" proved="true">
 <proof prover="0"><result status="valid" time="0.05"/></proof>
 <proof prover="1"><result status="valid" time="0.01" steps="6"/></proof>
 <proof prover="2"><result status="valid" time="0.08" steps="25157"/></proof>
 <proof prover="3"><result status="valid" time="0.02" steps="9762"/></proof>
 </goal>
 <goal name="Imperative.resize&#39;vc" expl="VC for resize" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="resize&#39;vc.0" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="14"/></proof>
  </goal>
  <goal name="resize&#39;vc.1" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="16"/></proof>
  </goal>
  <goal name="resize&#39;vc.2" expl="array creation size" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="14"/></proof>
  </goal>
  <goal name="resize&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="20"/></proof>
  </goal>
  <goal name="resize&#39;vc.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="20"/></proof>
  </goal>
  <goal name="resize&#39;vc.5" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="18"/></proof>
  </goal>
  <goal name="resize&#39;vc.6" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="19"/></proof>
  </goal>
  <goal name="resize&#39;vc.7" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="155"/></proof>
  </goal>
  <goal name="resize&#39;vc.8" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="resize&#39;vc.8.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="4.87" steps="19216"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resize&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="resize&#39;vc.10" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="resize&#39;vc.10.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.01" steps="18"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Imperative.bigger_father" proved="true">
 <proof prover="1"><result status="valid" time="4.84" steps="48665"/></proof>
 <proof prover="2"><result status="valid" time="0.53" steps="76336"/></proof>
 </goal>
 <goal name="Imperative.sub_order&#39;vc" expl="VC for sub_order" proved="true">
 <proof prover="1"><result status="valid" time="0.30" steps="2182"/></proof>
 </goal>
 <goal name="Imperative.sub_occ_1" proved="true">
 <proof prover="2"><result status="valid" time="0.61" steps="77862"/></proof>
 <proof prover="3"><result status="valid" time="1.30" steps="3370129"/></proof>
 </goal>
 <goal name="Imperative.sub_occ_2" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sub_occ_2.0" proved="true">
  <transf name="unfold" proved="true" arg1="numocc&#39;">
   <goal name="sub_occ_2.0.0" proved="true">
   <transf name="assert" proved="true" arg1="(numof a1 e 0 size1 = numof a1 e 0 i + numof a1 e i size1)">
    <goal name="sub_occ_2.0.0.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="0.03" steps="88"/></proof>
    </goal>
    <goal name="sub_occ_2.0.0.1" proved="true">
    <transf name="assert" proved="true" arg1="(numof a1 e 0 i = numof a2 e 0 i)">
     <goal name="sub_occ_2.0.0.1.0" expl="asserted formula" proved="true">
     <proof prover="2"><result status="valid" time="1.92" steps="161873"/></proof>
     </goal>
     <goal name="sub_occ_2.0.0.1.1" proved="true">
     <proof prover="3"><result status="valid" time="4.91" steps="8925711"/></proof>
     <transf name="assert" proved="true" arg1="(numof a1 e (i+1) size1 = numof a2 e (i+1) size2)">
      <goal name="sub_occ_2.0.0.1.1.0" expl="asserted formula" proved="true">
      <proof prover="2"><result status="valid" time="0.57" steps="88508"/></proof>
      </goal>
      <goal name="sub_occ_2.0.0.1.1.1" proved="true">
      <proof prover="3"><result status="valid" time="1.90" steps="4352940"/></proof>
      <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),abs,min,max,get,set,([]&#39;),([&lt;-]&#39;),(!),is_nil,length3,mem2,is_none,(++&#39;),reverse,rev_append1,num_occ,map1,([]&#39;&#39;&#39;),singleton,cons,snoc,(++),mem1,fst,snd,(%),is_pre_order,([]&#39;&#39;),mem,rev,append,rev_append,([]),numof1,le,is_heap,numocc,numocc&#39;,is_maximum,ancestor,children,pop,is_empty,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_le,Abs_pos,Min_r,Max_l,Min_comm,Max_comm,Min_assoc,Max_assoc,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,numof&#39;def,Numof_bounds,Empty,Full,numof_increasing,numof_strictly_increasing,numof_change_any,numof_change_some,numof_change_equiv,is_nil&#39;spec,Length_nonnegative,Length_nil,is_none&#39;spec,Append_assoc,Append_l_nil,Append_length,mem_append1,mem_decomp,reverse_append,reverse_cons,cons_reverse,reverse_reverse,reverse_mem,Reverse_length,rev_append_append_l,rev_append_length,rev_append_def,rev_append_append_r,Num_Occ_NonNeg,Mem_Num_Occ,Append_Num_Occ,reverse_num_occ,length_nonnegative,(==)&#39;spec,create&#39;spec,empty&#39;def,set&#39;spec,set&#39;def,([&lt;-])&#39;def,singleton&#39;spec,cons&#39;spec,snoc&#39;spec,([..])&#39;spec,([..])&#39;def,([_..])&#39;def,([.._])&#39;def,(++)&#39;spec,mem_append,mem_tail,same_location_eq,(~=)&#39;spec,cmp_eq,compare_pre_order,my_array&#39;invariant,to_list_range&#39;def,to_list_append,non_neg_max_array_length,array&#39;invariant,([&lt;-])&#39;spec,make_spec,pre_order_compare1,pre_order_compare,t&#39;invariant,max_def,num_exist,transativity,max_coherent,pop_occ_1,pop_occ_2,pop_order,is_empty&#39;spec,bigger_father,sub_order&#39;spec,sub_order&#39;def,sub_occ_1,H3,H2,h2">
       <goal name="sub_occ_2.0.0.1.1.1.0" proved="true">
       <proof prover="3" timelimit="1"><result status="valid" time="0.03" steps="65871"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Imperative.sub_occ_3" proved="true">
 <proof prover="2"><result status="valid" time="0.63" steps="76769"/></proof>
 <proof prover="3"><result status="valid" time="1.38" steps="3055442"/></proof>
 </goal>
 <goal name="Imperative.push_occ" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="push_occ.0" proved="true">
  <proof prover="2"><result status="valid" time="1.60" steps="142309"/></proof>
  </goal>
  <goal name="push_occ.1" proved="true">
  <proof prover="2"><result status="valid" time="1.46" steps="131353"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Imperative.push_order" proved="true">
 <proof prover="1"><result status="valid" time="0.17" steps="1079"/></proof>
 </goal>
 <goal name="Imperative.add&#39;vc" expl="VC for add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="add&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="17"/></proof>
  </goal>
  <goal name="add&#39;vc.1" expl="check division by zero" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="20"/></proof>
  </goal>
  <goal name="add&#39;vc.2" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="63"/></proof>
  </goal>
  <goal name="add&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="29"/></proof>
  </goal>
  <goal name="add&#39;vc.4" expl="check division by zero" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="39"/></proof>
  </goal>
  <goal name="add&#39;vc.5" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="140"/></proof>
  </goal>
  <goal name="add&#39;vc.6" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="143"/></proof>
  </goal>
  <goal name="add&#39;vc.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="42"/></proof>
  </goal>
  <goal name="add&#39;vc.8" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="45"/></proof>
  </goal>
  <goal name="add&#39;vc.9" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="46"/></proof>
  </goal>
  <goal name="add&#39;vc.10" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="153"/></proof>
  </goal>
  <goal name="add&#39;vc.11" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="145"/></proof>
  </goal>
  <goal name="add&#39;vc.12" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="158"/></proof>
  </goal>
  <goal name="add&#39;vc.13" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="53"/></proof>
  </goal>
  <goal name="add&#39;vc.14" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="172"/></proof>
  </goal>
  <goal name="add&#39;vc.15" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="176"/></proof>
  </goal>
  <goal name="add&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="68"/></proof>
  </goal>
  <goal name="add&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="219"/></proof>
  </goal>
  <goal name="add&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="68"/></proof>
  </goal>
  <goal name="add&#39;vc.19" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="237"/></proof>
  </goal>
  <goal name="add&#39;vc.20" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="40"/></proof>
  </goal>
  <goal name="add&#39;vc.21" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="45"/></proof>
  </goal>
  <goal name="add&#39;vc.22" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="45"/></proof>
  </goal>
  <goal name="add&#39;vc.23" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="120"/></proof>
  </goal>
  <goal name="add&#39;vc.24" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="124"/></proof>
  </goal>
  <goal name="add&#39;vc.25" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="132"/></proof>
  </goal>
  <goal name="add&#39;vc.26" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="51"/></proof>
  </goal>
  <goal name="add&#39;vc.27" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="150"/></proof>
  </goal>
  <goal name="add&#39;vc.28" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="65"/></proof>
  </goal>
  <goal name="add&#39;vc.29" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="91"/></proof>
  </goal>
  <goal name="add&#39;vc.30" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="75"/></proof>
  </goal>
  <goal name="add&#39;vc.31" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="74"/></proof>
  </goal>
  <goal name="add&#39;vc.32" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="107"/></proof>
  </goal>
  <goal name="add&#39;vc.33" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="34"/></proof>
  </goal>
  <goal name="add&#39;vc.34" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="35"/></proof>
  </goal>
  <goal name="add&#39;vc.35" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="39"/></proof>
  </goal>
  <goal name="add&#39;vc.36" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="142"/></proof>
  </goal>
  <goal name="add&#39;vc.37" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="151"/></proof>
  </goal>
  <goal name="add&#39;vc.38" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="42"/></proof>
  </goal>
  <goal name="add&#39;vc.39" expl="check division by zero" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="14"/></proof>
  <proof prover="2"><result status="valid" time="0.11" steps="28520"/></proof>
  <proof prover="3"><result status="valid" time="0.03" steps="11059"/></proof>
  </goal>
  <goal name="add&#39;vc.40" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="101"/></proof>
  <proof prover="2"><result status="valid" time="0.19" steps="33648"/></proof>
  <proof prover="3"><result status="valid" time="1.30" steps="3526023"/></proof>
  </goal>
  <goal name="add&#39;vc.41" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="16"/></proof>
  <proof prover="2"><result status="valid" time="0.19" steps="32164"/></proof>
  <proof prover="3"><result status="valid" time="0.07" steps="165231"/></proof>
  </goal>
  <goal name="add&#39;vc.42" expl="check division by zero" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="29"/></proof>
  <proof prover="2"><result status="valid" time="0.12" steps="28988"/></proof>
  <proof prover="3"><result status="valid" time="0.02" steps="11394"/></proof>
  </goal>
  <goal name="add&#39;vc.43" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="137"/></proof>
  <proof prover="2"><result status="valid" time="0.19" steps="36702"/></proof>
  <proof prover="3"><result status="valid" time="4.58" steps="9201815"/></proof>
  </goal>
  <goal name="add&#39;vc.44" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="142"/></proof>
  <proof prover="2"><result status="valid" time="0.19" steps="37750"/></proof>
  <proof prover="3"><result status="valid" time="0.04" steps="170760"/></proof>
  </goal>
  <goal name="add&#39;vc.45" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="33"/></proof>
  <proof prover="2"><result status="valid" time="0.15" steps="31230"/></proof>
  <proof prover="3"><result status="valid" time="0.07" steps="167294"/></proof>
  </goal>
  <goal name="add&#39;vc.46" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  <proof prover="1"><result status="valid" time="0.01" steps="38"/></proof>
  <proof prover="2"><result status="valid" time="0.13" steps="30618"/></proof>
  <proof prover="3"><result status="valid" time="0.07" steps="163968"/></proof>
  </goal>
  <goal name="add&#39;vc.47" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.11"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="39"/></proof>
  <proof prover="2"><result status="valid" time="0.14" steps="31349"/></proof>
  <proof prover="3"><result status="valid" time="0.04" steps="168049"/></proof>
  </goal>
  <goal name="add&#39;vc.48" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.48.0" expl="type invariant" proved="true">
   <transf name="unfold" proved="true" arg1="is_heap">
    <goal name="add&#39;vc.48.0.0" expl="VC for add" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="add&#39;vc.48.0.0.0" expl="VC for add" proved="true">
     <proof prover="1"><result status="valid" time="1.28" steps="11299"/></proof>
     </goal>
     <goal name="add&#39;vc.48.0.0.1" expl="VC for add" proved="true">
     <proof prover="1"><result status="valid" time="1.31" steps="11030"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.49" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="129"/></proof>
  <proof prover="2"><result status="valid" time="0.13" steps="37988"/></proof>
  <proof prover="3"><result status="valid" time="0.07" steps="168065"/></proof>
  </goal>
  <goal name="add&#39;vc.50" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="157"/></proof>
  <proof prover="2"><result status="valid" time="0.16" steps="38156"/></proof>
  <proof prover="3"><result status="valid" time="0.09" steps="168377"/></proof>
  </goal>
  <goal name="add&#39;vc.51" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.21"/></proof>
  <proof prover="1"><result status="valid" time="0.03" steps="46"/></proof>
  <proof prover="2"><result status="valid" time="0.15" steps="31467"/></proof>
  <proof prover="3"><result status="valid" time="0.05" steps="168546"/></proof>
  </goal>
  <goal name="add&#39;vc.52" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="3.45" steps="22821"/></proof>
  </goal>
  <goal name="add&#39;vc.53" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.32" steps="8962"/></proof>
  </goal>
  <goal name="add&#39;vc.54" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  <proof prover="1"><result status="valid" time="0.03" steps="54"/></proof>
  <proof prover="2"><result status="valid" time="0.08" steps="29599"/></proof>
  <proof prover="3"><result status="valid" time="0.03" steps="11785"/></proof>
  </goal>
  <goal name="add&#39;vc.55" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="(subst d d1 i (size h2) (size h2))">
   <goal name="add&#39;vc.55.0" expl="asserted formula" proved="true">
   <proof prover="1"><result status="valid" time="1.10" steps="3727"/></proof>
   </goal>
   <goal name="add&#39;vc.55.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.80" steps="4181"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.56" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="55"/></proof>
  <proof prover="2"><result status="valid" time="0.12" steps="31266"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="172222"/></proof>
  </goal>
  <goal name="add&#39;vc.57" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.57.0" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(subst d d1 i (size h1) (size h1))">
    <goal name="add&#39;vc.57.0.0" expl="asserted formula" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="add&#39;vc.57.0.0.0" expl="asserted formula" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="add&#39;vc.57.0.0.0.0" proved="true">
      <proof prover="1"><result status="valid" time="0.03" steps="52"/></proof>
      <proof prover="2"><result status="valid" time="0.10" steps="44894"/></proof>
      <proof prover="3"><result status="valid" time="0.03" steps="16889"/></proof>
      </goal>
      <goal name="add&#39;vc.57.0.0.0.1" proved="true">
      <proof prover="1"><result status="valid" time="0.03" steps="52"/></proof>
      <proof prover="2"><result status="valid" time="0.11" steps="44896"/></proof>
      <proof prover="3"><result status="valid" time="0.02" steps="16893"/></proof>
      </goal>
      <goal name="add&#39;vc.57.0.0.0.2" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="add&#39;vc.57.0.0.0.2.0" proved="true">
       <proof prover="1"><result status="valid" time="0.05" steps="52"/></proof>
       <proof prover="2"><result status="valid" time="0.14" steps="46587"/></proof>
       <proof prover="3"><result status="valid" time="0.07" steps="229025"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="add&#39;vc.57.0.0.0.3" proved="true">
      <proof prover="1"><result status="valid" time="1.17" steps="3947"/></proof>
      <proof prover="2"><result status="valid" time="0.68" steps="89653"/></proof>
      <proof prover="3"><result status="valid" time="0.07" steps="244643"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="add&#39;vc.57.0.1" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.37" steps="58701"/></proof>
    <proof prover="3"><result status="valid" time="0.08" steps="194400"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="add&#39;vc.57.1" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(subst d d1 i (size h2) (size h2))">
    <goal name="add&#39;vc.57.1.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="1.02" steps="3690"/></proof>
    </goal>
    <goal name="add&#39;vc.57.1.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.51" steps="2372"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="add&#39;vc.57.2" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(subst d d1 i (size h1) (size h1))">
    <goal name="add&#39;vc.57.2.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="1.06" steps="3928"/></proof>
    </goal>
    <goal name="add&#39;vc.57.2.1" expl="postcondition" proved="true">
    <transf name="case" proved="true" arg1="(d1[i]&#39;&#39; = d[i]&#39;&#39;)">
     <goal name="add&#39;vc.57.2.1.0" expl="true case (postcondition)" proved="true">
     <proof prover="1"><result status="valid" time="0.33" steps="2273"/></proof>
     <proof prover="2"><result status="valid" time="0.66" steps="82928"/></proof>
     </goal>
     <goal name="add&#39;vc.57.2.1.1" expl="false case (postcondition)" proved="true">
     <transf name="instantiate" proved="true" arg1="sub_occ_2" arg2="d1,d,i,h2.size,h2.size">
      <goal name="add&#39;vc.57.2.1.1.0" expl="false case (postcondition)" proved="true">
      <transf name="destruct_rec" proved="true" arg1="Hinst">
       <goal name="add&#39;vc.57.2.1.1.0.0" expl="destruct premise" proved="true">
       <proof prover="1"><result status="valid" time="0.03" steps="56"/></proof>
       <proof prover="2"><result status="valid" time="0.11" steps="31367"/></proof>
       </goal>
       <goal name="add&#39;vc.57.2.1.1.0.1" expl="destruct premise" proved="true">
       <proof prover="1"><result status="valid" time="0.02" steps="56"/></proof>
       <proof prover="2"><result status="valid" time="0.08" steps="29705"/></proof>
       </goal>
       <goal name="add&#39;vc.57.2.1.1.0.2" expl="destruct premise" proved="true">
       <proof prover="1"><result status="valid" time="0.14" steps="865"/></proof>
       <proof prover="2"><result status="valid" time="0.28" steps="46945"/></proof>
       </goal>
       <goal name="add&#39;vc.57.2.1.1.0.3" expl="destruct premise" proved="true">
       <proof prover="1"><result status="valid" time="0.03" steps="56"/></proof>
       <proof prover="2"><result status="valid" time="0.10" steps="29723"/></proof>
       </goal>
       <goal name="add&#39;vc.57.2.1.1.0.4" expl="false case (postcondition)" proved="true">
       <proof prover="1"><result status="valid" time="0.60" steps="2824"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.58" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="29"/></proof>
  <proof prover="2"><result status="valid" time="0.09" steps="31242"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="167342"/></proof>
  </goal>
  <goal name="add&#39;vc.59" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  <proof prover="1"><result status="valid" time="0.04" steps="34"/></proof>
  <proof prover="2"><result status="valid" time="0.15" steps="30634"/></proof>
  <proof prover="3"><result status="valid" time="0.07" steps="164045"/></proof>
  </goal>
  <goal name="add&#39;vc.60" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.10"/></proof>
  <proof prover="1"><result status="valid" time="0.04" steps="35"/></proof>
  <proof prover="2"><result status="valid" time="0.14" steps="31365"/></proof>
  <proof prover="3"><result status="valid" time="0.07" steps="168126"/></proof>
  </goal>
  <goal name="add&#39;vc.61" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.61.0" expl="type invariant" proved="true">
   <proof prover="1"><result status="valid" time="2.39" steps="14531"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.62" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.24" steps="1413"/></proof>
  </goal>
  <goal name="add&#39;vc.63" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.63.0" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(subst (data h1) (data h) i (size h) (size h))">
    <goal name="add&#39;vc.63.0.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="0.49" steps="3288"/></proof>
    </goal>
    <goal name="add&#39;vc.63.0.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.26" steps="837"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.64" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="40"/></proof>
  <proof prover="2"><result status="valid" time="0.08" steps="29315"/></proof>
  <proof prover="3"><result status="valid" time="0.03" steps="11619"/></proof>
  </goal>
  <goal name="add&#39;vc.65" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.65.0" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(subst d d1 i (size h) (size h))">
    <goal name="add&#39;vc.65.0.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="0.39" steps="2812"/></proof>
    </goal>
    <goal name="add&#39;vc.65.0.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.16" steps="1330"/></proof>
    <proof prover="2"><result status="valid" time="0.16" steps="34583"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="add&#39;vc.65.1" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(subst d d1 i (size h) (size h))">
    <goal name="add&#39;vc.65.1.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="0.48" steps="2799"/></proof>
    </goal>
    <goal name="add&#39;vc.65.1.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.29" steps="1429"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="add&#39;vc.65.2" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(subst d d1 i (size h) (size h))">
    <goal name="add&#39;vc.65.2.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="0.34" steps="2799"/></proof>
    </goal>
    <goal name="add&#39;vc.65.2.1" expl="postcondition" proved="true">
    <transf name="case" proved="true" arg1="(d1[i]&#39;&#39; = d[i]&#39;&#39;)">
     <goal name="add&#39;vc.65.2.1.0" expl="true case (postcondition)" proved="true">
     <proof prover="1"><result status="valid" time="0.29" steps="1140"/></proof>
     </goal>
     <goal name="add&#39;vc.65.2.1.1" expl="false case (postcondition)" proved="true">
     <transf name="instantiate" proved="true" arg1="sub_occ_2" arg2="d1,d,i,h2.size,h2.size">
      <goal name="add&#39;vc.65.2.1.1.0" expl="false case (postcondition)" proved="true">
      <transf name="destruct_rec" proved="true" arg1="Hinst">
       <goal name="add&#39;vc.65.2.1.1.0.0" expl="destruct premise" proved="true">
       <proof prover="1"><result status="valid" time="0.02" steps="42"/></proof>
       <proof prover="2"><result status="valid" time="0.11" steps="30934"/></proof>
       </goal>
       <goal name="add&#39;vc.65.2.1.1.0.1" expl="destruct premise" proved="true">
       <proof prover="1"><result status="valid" time="0.02" steps="42"/></proof>
       <proof prover="2"><result status="valid" time="0.07" steps="29361"/></proof>
       </goal>
       <goal name="add&#39;vc.65.2.1.1.0.2" expl="destruct premise" proved="true">
       <proof prover="1"><result status="valid" time="0.37" steps="2787"/></proof>
       <proof prover="2"><result status="valid" time="0.17" steps="34024"/></proof>
       </goal>
       <goal name="add&#39;vc.65.2.1.1.0.3" expl="destruct premise" proved="true">
       <proof prover="1"><result status="valid" time="0.03" steps="42"/></proof>
       <proof prover="2"><result status="valid" time="0.11" steps="29393"/></proof>
       </goal>
       <goal name="add&#39;vc.65.2.1.1.0.4" expl="false case (postcondition)" proved="true">
       <proof prover="1"><result status="valid" time="0.02" steps="47"/></proof>
       <proof prover="2"><result status="valid" time="0.12" steps="31124"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.66" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.29"/></proof>
  <proof prover="1"><result status="valid" time="0.03" steps="57"/></proof>
  <proof prover="2"><result status="valid" time="0.15" steps="32066"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="162592"/></proof>
  </goal>
  <goal name="add&#39;vc.67" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.10"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="20"/></proof>
  <proof prover="2"><result status="valid" time="0.12" steps="30716"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="164035"/></proof>
  </goal>
  <goal name="add&#39;vc.68" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.42" steps="2982"/></proof>
  </goal>
  <goal name="add&#39;vc.69" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="61"/></proof>
  <proof prover="2"><result status="valid" time="0.18" steps="32322"/></proof>
  <proof prover="3"><result status="valid" time="0.09" steps="168907"/></proof>
  </goal>
  <goal name="add&#39;vc.70" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="25"/></proof>
  <proof prover="2"><result status="valid" time="0.12" steps="30833"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="170251"/></proof>
  </goal>
  <goal name="add&#39;vc.71" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="27"/></proof>
  <proof prover="2"><result status="valid" time="0.11" steps="30346"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="167048"/></proof>
  </goal>
  <goal name="add&#39;vc.72" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="28"/></proof>
  <proof prover="2"><result status="valid" time="0.12" steps="30440"/></proof>
  <proof prover="3"><result status="valid" time="0.07" steps="172377"/></proof>
  </goal>
  <goal name="add&#39;vc.73" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="33"/></proof>
  </goal>
  <goal name="add&#39;vc.74" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.74.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="add&#39;vc.74.0.0" expl="postcondition" proved="true">
    <transf name="destruct" proved="true" arg1="H1">
     <goal name="add&#39;vc.74.0.0.0" expl="postcondition" proved="true">
     <transf name="assert" proved="true" arg1="(push h2.data h1.data h2.size h1.size)">
      <goal name="add&#39;vc.74.0.0.0.0" expl="asserted formula" proved="true">
      <proof prover="1"><result status="valid" time="0.42" steps="2374"/></proof>
      </goal>
      <goal name="add&#39;vc.74.0.0.0.1" expl="postcondition" proved="true">
      <proof prover="1"><result status="valid" time="0.03" steps="144"/></proof>
      <proof prover="2"><result status="valid" time="0.18" steps="39243"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="add&#39;vc.74.0.0.1" expl="postcondition" proved="true">
     <transf name="instantiate" proved="true" arg1="push_occ" arg2="d1,d,h2.size,h.size">
      <goal name="add&#39;vc.74.0.0.1.0" expl="postcondition" proved="true">
      <transf name="destruct_rec" proved="true" arg1="Hinst">
       <goal name="add&#39;vc.74.0.0.1.0.0" expl="destruct premise" proved="true">
       <proof prover="1"><result status="valid" time="1.55" steps="6131"/></proof>
       </goal>
       <goal name="add&#39;vc.74.0.0.1.0.1" expl="destruct premise" proved="true">
       <proof prover="1"><result status="valid" time="0.04" steps="121"/></proof>
       <proof prover="2"><result status="valid" time="0.16" steps="33677"/></proof>
       </goal>
       <goal name="add&#39;vc.74.0.0.1.0.2" expl="postcondition" proved="true">
       <proof prover="1"><result status="valid" time="0.03" steps="213"/></proof>
       <proof prover="2"><result status="valid" time="0.16" steps="33547"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.75" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.75.0" expl="postcondition" proved="true">
   <transf name="case" proved="true" arg1="(e = get1 (data h1) n )">
    <goal name="add&#39;vc.75.0.0" expl="true case (postcondition)" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="add&#39;vc.75.0.0.0" expl="true case (postcondition)" proved="true">
     <transf name="destruct" proved="true" arg1="H3">
      <goal name="add&#39;vc.75.0.0.0.0" expl="true case (postcondition)" proved="true">
      <transf name="assert" proved="true" arg1="(push h3.data h2.data h3.size h2.size)">
       <goal name="add&#39;vc.75.0.0.0.0.0" expl="asserted formula" proved="true">
       <proof prover="1"><result status="valid" time="0.03" steps="32"/></proof>
       </goal>
       <goal name="add&#39;vc.75.0.0.0.0.1" expl="true case (postcondition)" proved="true">
       <proof prover="1"><result status="valid" time="0.02" steps="32"/></proof>
       <proof prover="2"><result status="valid" time="0.18" steps="29102"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="add&#39;vc.75.0.0.0.1" expl="true case (postcondition)" proved="true">
      <transf name="assert" proved="true" arg1="(push h3.data h2.data h3.size h2.size)">
       <goal name="add&#39;vc.75.0.0.0.1.0" expl="asserted formula" proved="true">
       <proof prover="1"><result status="valid" time="2.27" steps="8123"/></proof>
       </goal>
       <goal name="add&#39;vc.75.0.0.0.1.1" expl="true case (postcondition)" proved="true">
       <proof prover="1"><result status="valid" time="0.03" steps="188"/></proof>
       <proof prover="2"><result status="valid" time="0.15" steps="34596"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="add&#39;vc.75.0.1" expl="false case (postcondition)" proved="true">
    <transf name="instantiate" proved="true" arg1="H5" arg2="e">
     <goal name="add&#39;vc.75.0.1.0" expl="false case (postcondition)" proved="true">
     <transf name="destruct_rec" proved="true" arg1="Hinst">
      <goal name="add&#39;vc.75.0.1.0.0" expl="destruct premise" proved="true">
      <proof prover="1"><result status="valid" time="0.02" steps="33"/></proof>
      <proof prover="2"><result status="valid" time="0.08" steps="29145"/></proof>
      </goal>
      <goal name="add&#39;vc.75.0.1.0.1" expl="destruct premise" proved="true">
      <proof prover="1"><result status="valid" time="0.02" steps="34"/></proof>
      <proof prover="2"><result status="valid" time="0.11" steps="29244"/></proof>
      </goal>
      <goal name="add&#39;vc.75.0.1.0.2" expl="false case (postcondition)" proved="true">
      <transf name="assert" proved="true" arg1="(push h3.data h2.data h3.size h2.size)">
       <goal name="add&#39;vc.75.0.1.0.2.0" expl="asserted formula" proved="true">
       <transf name="unfold" proved="true" arg1="push">
        <goal name="add&#39;vc.75.0.1.0.2.0.0" proved="true">
        <proof prover="1"><result status="valid" time="1.75" steps="6831"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="add&#39;vc.75.0.1.0.2.1" expl="false case (postcondition)" proved="true">
       <proof prover="1"><result status="valid" time="0.15" steps="706"/></proof>
       <proof prover="2"><result status="valid" time="0.16" steps="41963"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.76" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="35"/></proof>
  <proof prover="2"><result status="valid" time="0.11" steps="30740"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="167638"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Imperative.maximum&#39;vc" expl="VC for maximum" proved="true">
 <proof prover="1"><result status="valid" time="0.03" steps="67"/></proof>
 </goal>
 <goal name="Imperative.remove&#39;vc" expl="VC for remove" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="remove&#39;vc.0" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.19"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="14"/></proof>
  <proof prover="2"><result status="valid" time="0.18" steps="31079"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="159920"/></proof>
  </goal>
  <goal name="remove&#39;vc.1" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="14"/></proof>
  <proof prover="2"><result status="valid" time="0.16" steps="32044"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="164826"/></proof>
  </goal>
  <goal name="remove&#39;vc.2" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="28"/></proof>
  <proof prover="2"><result status="valid" time="0.15" steps="30961"/></proof>
  <proof prover="3"><result status="valid" time="0.05" steps="171481"/></proof>
  </goal>
  <goal name="remove&#39;vc.3" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="28"/></proof>
  <proof prover="2"><result status="valid" time="0.13" steps="30968"/></proof>
  <proof prover="3"><result status="valid" time="0.09" steps="167991"/></proof>
  </goal>
  <goal name="remove&#39;vc.4" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="38"/></proof>
  <proof prover="2"><result status="valid" time="0.13" steps="31196"/></proof>
  <proof prover="3"><result status="valid" time="1.74" steps="3970118"/></proof>
  </goal>
  <goal name="remove&#39;vc.5" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="39"/></proof>
  <proof prover="2"><result status="valid" time="0.19" steps="31261"/></proof>
  <proof prover="3"><result status="valid" time="2.70" steps="6477691"/></proof>
  </goal>
  <goal name="remove&#39;vc.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.25"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="28"/></proof>
  <proof prover="2"><result status="valid" time="0.11" steps="31177"/></proof>
  <proof prover="3"><result status="valid" time="0.08" steps="166517"/></proof>
  </goal>
  <goal name="remove&#39;vc.7" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="33"/></proof>
  <proof prover="2"><result status="valid" time="0.10" steps="30567"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="163071"/></proof>
  </goal>
  <goal name="remove&#39;vc.8" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.07"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="34"/></proof>
  <proof prover="2"><result status="valid" time="0.12" steps="31295"/></proof>
  <proof prover="3"><result status="valid" time="0.07" steps="167202"/></proof>
  </goal>
  <goal name="remove&#39;vc.9" expl="type invariant" proved="true">
  <transf name="unfold" proved="true" arg1="is_heap">
   <goal name="remove&#39;vc.9.0" expl="VC for remove" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="remove&#39;vc.9.0.0" expl="VC for remove" proved="true">
    <transf name="assert" proved="true" arg1="(le (get1 d (div (j - 1) 2)) x)">
     <goal name="remove&#39;vc.9.0.0.0" expl="asserted formula" proved="true">
     <proof prover="1"><result status="valid" time="0.23" steps="2050"/></proof>
     </goal>
     <goal name="remove&#39;vc.9.0.0.1" expl="VC for remove" proved="true">
     <proof prover="1"><result status="valid" time="4.07" steps="44656"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="remove&#39;vc.9.0.1" expl="VC for remove" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="remove&#39;vc.9.0.1.0" expl="VC for remove" proved="true">
     <proof prover="1" memlimit="2000"><result status="valid" time="3.02" steps="30791"/></proof>
     </goal>
     <goal name="remove&#39;vc.9.0.1.1" expl="VC for remove" proved="true">
     <proof prover="1" memlimit="2000"><result status="valid" time="2.94" steps="31351"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.10" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.10.0" expl="variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="0.23"/></proof>
   <proof prover="1"><result status="valid" time="0.02" steps="35"/></proof>
   <proof prover="2"><result status="valid" time="0.09" steps="30552"/></proof>
   <proof prover="3"><result status="valid" time="0.07" steps="163346"/></proof>
   </goal>
   <goal name="remove&#39;vc.10.1" expl="variant decrease" proved="true">
   <transf name="assert" proved="true" arg1="(j &gt; i)">
    <goal name="remove&#39;vc.10.1.0" expl="asserted formula" proved="true">
    <transf name="assert" proved="true" arg1="(j = j1 \/ j = j&#39;)">
     <goal name="remove&#39;vc.10.1.0.0" expl="asserted formula" proved="true">
     <proof prover="0"><result status="valid" time="0.07"/></proof>
     <proof prover="1"><result status="valid" time="0.02" steps="34"/></proof>
     <proof prover="2"><result status="valid" time="0.12" steps="30545"/></proof>
     <proof prover="3"><result status="valid" time="0.03" steps="16574"/></proof>
     </goal>
     <goal name="remove&#39;vc.10.1.0.1" expl="asserted formula" proved="true">
     <proof prover="1"><result status="valid" time="0.02" steps="37"/></proof>
     <proof prover="2"><result status="valid" time="0.12" steps="30678"/></proof>
     <proof prover="3"><result status="valid" time="3.24" steps="8339980"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="remove&#39;vc.10.1.1" expl="variant decrease" proved="true">
    <proof prover="1"><result status="valid" time="0.02" steps="35"/></proof>
    <proof prover="2"><result status="valid" time="0.08" steps="29163"/></proof>
    <proof prover="3"><result status="valid" time="0.04" steps="92266"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.11" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="39"/></proof>
  <proof prover="2"><result status="valid" time="0.15" steps="31346"/></proof>
  <proof prover="3"><result status="valid" time="0.07" steps="167393"/></proof>
  </goal>
  <goal name="remove&#39;vc.12" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.39" steps="1898"/></proof>
  </goal>
  <goal name="remove&#39;vc.13" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="52"/></proof>
  <proof prover="2"><result status="valid" time="0.15" steps="30912"/></proof>
  </goal>
  <goal name="remove&#39;vc.14" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="(subst d d1 i h1.size h1.size)">
   <goal name="remove&#39;vc.14.0" expl="asserted formula" proved="true">
   <transf name="unfold" proved="true" arg1="subst">
    <goal name="remove&#39;vc.14.0.0" proved="true">
    <proof prover="1"><result status="valid" time="1.30" steps="5377"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="remove&#39;vc.14.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.29" steps="9950"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.15" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.15.0" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(subst d d1 i h1.size h1.size)">
    <goal name="remove&#39;vc.15.0.0" expl="asserted formula" proved="true">
    <transf name="unfold" proved="true" arg1="subst">
     <goal name="remove&#39;vc.15.0.0.0" proved="true">
     <proof prover="1"><result status="valid" time="3.87" steps="22116"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="remove&#39;vc.15.0.1" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.30" steps="48620"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="remove&#39;vc.15.1" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(subst d d1 i h1.size h1.size)">
    <goal name="remove&#39;vc.15.1.0" expl="asserted formula" proved="true">
    <transf name="unfold" proved="true" arg1="subst">
     <goal name="remove&#39;vc.15.1.0.0" proved="true">
     <proof prover="1"><result status="valid" time="1.31" steps="5964"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="remove&#39;vc.15.1.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="1.15" steps="7944"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="remove&#39;vc.15.2" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(subst d d1 i h1.size h1.size)">
    <goal name="remove&#39;vc.15.2.0" expl="asserted formula" proved="true">
    <transf name="unfold" proved="true" arg1="subst">
     <goal name="remove&#39;vc.15.2.0.0" proved="true">
     <proof prover="1"><result status="valid" time="1.44" steps="5964"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="remove&#39;vc.15.2.1" expl="postcondition" proved="true">
    <transf name="case" proved="true" arg1="(d1[i]&#39;&#39; = d[i]&#39;&#39;)">
     <goal name="remove&#39;vc.15.2.1.0" expl="true case (postcondition)" proved="true">
     <proof prover="1"><result status="valid" time="0.73" steps="5066"/></proof>
     <proof prover="2"><result status="valid" time="0.78" steps="95082"/></proof>
     </goal>
     <goal name="remove&#39;vc.15.2.1.1" expl="false case (postcondition)" proved="true">
     <transf name="instantiate" proved="true" arg1="sub_occ_2" arg2="d1,d,i,h4.size,h4.size">
      <goal name="remove&#39;vc.15.2.1.1.0" expl="false case (postcondition)" proved="true">
      <transf name="destruct_rec" proved="true" arg1="Hinst">
       <goal name="remove&#39;vc.15.2.1.1.0.0" expl="destruct premise" proved="true">
       <proof prover="1"><result status="valid" time="0.03" steps="54"/></proof>
       </goal>
       <goal name="remove&#39;vc.15.2.1.1.0.1" expl="destruct premise" proved="true">
       <proof prover="1"><result status="valid" time="0.02" steps="54"/></proof>
       </goal>
       <goal name="remove&#39;vc.15.2.1.1.0.2" expl="destruct premise" proved="true">
       <proof prover="1"><result status="valid" time="2.52" steps="17496"/></proof>
       </goal>
       <goal name="remove&#39;vc.15.2.1.1.0.3" expl="destruct premise" proved="true">
       <proof prover="1"><result status="valid" time="0.03" steps="54"/></proof>
       </goal>
       <goal name="remove&#39;vc.15.2.1.1.0.4" expl="false case (postcondition)" proved="true">
       <proof prover="1"><result status="valid" time="0.95" steps="6685"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.16" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.26"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="28"/></proof>
  <proof prover="2"><result status="valid" time="0.13" steps="31183"/></proof>
  <proof prover="3"><result status="valid" time="0.08" steps="166468"/></proof>
  </goal>
  <goal name="remove&#39;vc.17" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="33"/></proof>
  <proof prover="2"><result status="valid" time="0.13" steps="30573"/></proof>
  <proof prover="3"><result status="valid" time="0.07" steps="163048"/></proof>
  </goal>
  <goal name="remove&#39;vc.18" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  <proof prover="1"><result status="valid" time="0.03" steps="34"/></proof>
  <proof prover="2"><result status="valid" time="0.12" steps="31301"/></proof>
  <proof prover="3"><result status="valid" time="0.08" steps="167179"/></proof>
  </goal>
  <goal name="remove&#39;vc.19" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="3.25" steps="26583"/></proof>
  </goal>
  <goal name="remove&#39;vc.20" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.20.0" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(subst d d1 i h1.size h1.size)">
    <goal name="remove&#39;vc.20.0.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="0.19" steps="1026"/></proof>
    </goal>
    <goal name="remove&#39;vc.20.0.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.04" steps="319"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="remove&#39;vc.20.1" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(subst d d1 i h1.size h1.size)">
    <goal name="remove&#39;vc.20.1.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="0.27" steps="1748"/></proof>
    </goal>
    <goal name="remove&#39;vc.20.1.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.06" steps="294"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.21" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.21.0" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(subst d d1 i h1.size h1.size)">
    <goal name="remove&#39;vc.21.0.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="0.50" steps="4286"/></proof>
    </goal>
    <goal name="remove&#39;vc.21.0.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.12" steps="1006"/></proof>
    <proof prover="2"><result status="valid" time="0.16" steps="34997"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="remove&#39;vc.21.1" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(subst d d1 i h1.size h1.size)">
    <goal name="remove&#39;vc.21.1.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="0.64" steps="5424"/></proof>
    </goal>
    <goal name="remove&#39;vc.21.1.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.14" steps="1190"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="remove&#39;vc.21.2" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(subst d d1 i h1.size h1.size)">
    <goal name="remove&#39;vc.21.2.0" expl="asserted formula" proved="true">
    <transf name="unfold" proved="true" arg1="subst">
     <goal name="remove&#39;vc.21.2.0.0" proved="true">
     <proof prover="1"><result status="valid" time="0.25" steps="1660"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="remove&#39;vc.21.2.1" expl="postcondition" proved="true">
    <transf name="case" proved="true" arg1="(d1[i]&#39;&#39; = d[i]&#39;&#39;)">
     <goal name="remove&#39;vc.21.2.1.0" expl="true case (postcondition)" proved="true">
     <proof prover="1"><result status="valid" time="0.07" steps="426"/></proof>
     </goal>
     <goal name="remove&#39;vc.21.2.1.1" expl="false case (postcondition)" proved="true">
     <proof prover="2"><result status="valid" time="0.49" steps="61034"/></proof>
     <transf name="instantiate" proved="true" arg1="sub_occ_2" arg2="d1,d,i,h4.size,h4.size">
      <goal name="remove&#39;vc.21.2.1.1.0" expl="false case (postcondition)" proved="true">
      <proof prover="1"><result status="valid" time="2.85" steps="10992"/></proof>
      <proof prover="2"><result status="valid" time="0.48" steps="81034"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.22" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.26"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="26"/></proof>
  <proof prover="2"><result status="valid" time="0.15" steps="30917"/></proof>
  <proof prover="3"><result status="valid" time="0.08" steps="165118"/></proof>
  </goal>
  <goal name="remove&#39;vc.23" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.05"/></proof>
  <proof prover="1"><result status="valid" time="0.03" steps="31"/></proof>
  <proof prover="2"><result status="valid" time="0.13" steps="30309"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="161885"/></proof>
  </goal>
  <goal name="remove&#39;vc.24" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.10"/></proof>
  <proof prover="1"><result status="valid" time="0.03" steps="32"/></proof>
  <proof prover="2"><result status="valid" time="0.13" steps="31037"/></proof>
  <proof prover="3"><result status="valid" time="0.08" steps="165878"/></proof>
  </goal>
  <goal name="remove&#39;vc.25" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.25.0" expl="type invariant" proved="true">
   <transf name="unfold" proved="true" arg1="is_heap">
    <goal name="remove&#39;vc.25.0.0" expl="VC for remove" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="remove&#39;vc.25.0.0.0" expl="VC for remove" proved="true">
     <proof prover="1"><result status="valid" time="0.15" steps="790"/></proof>
     </goal>
     <goal name="remove&#39;vc.25.0.0.1" expl="VC for remove" proved="true">
     <proof prover="1"><result status="valid" time="0.14" steps="784"/></proof>
     <transf name="assert" proved="true" arg1="(le (get1 (d) (div (j - 1) 2)) x)">
      <goal name="remove&#39;vc.25.0.0.1.0" expl="asserted formula" proved="true">
      <proof prover="1"><result status="valid" time="0.18" steps="645"/></proof>
      </goal>
      <goal name="remove&#39;vc.25.0.0.1.1" expl="VC for remove" proved="true">
      <proof prover="1"><result status="valid" time="0.23" steps="1149"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.26" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.26.0" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(subst d d1 i h.size h.size)">
    <goal name="remove&#39;vc.26.0.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="0.21" steps="576"/></proof>
    </goal>
    <goal name="remove&#39;vc.26.0.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.06" steps="496"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.27" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.27.0" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(subst d d1 i h1.size h1.size)">
    <goal name="remove&#39;vc.27.0.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="0.11" steps="626"/></proof>
    </goal>
    <goal name="remove&#39;vc.27.0.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.16" steps="1069"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="remove&#39;vc.27.1" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(subst d d1 i h1.size h1.size)">
    <goal name="remove&#39;vc.27.1.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="0.13" steps="619"/></proof>
    </goal>
    <goal name="remove&#39;vc.27.1.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.16" steps="1193"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="remove&#39;vc.27.2" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(subst d d1 i h1.size h1.size)">
    <goal name="remove&#39;vc.27.2.0" expl="asserted formula" proved="true">
    <transf name="unfold" proved="true" arg1="subst">
     <goal name="remove&#39;vc.27.2.0.0" proved="true">
     <proof prover="1"><result status="valid" time="0.08" steps="417"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="remove&#39;vc.27.2.1" expl="postcondition" proved="true">
    <transf name="case" proved="true" arg1="(d1[i]&#39;&#39; = d[i]&#39;&#39;)">
     <goal name="remove&#39;vc.27.2.1.0" expl="true case (postcondition)" proved="true">
     <proof prover="1"><result status="valid" time="0.07" steps="749"/></proof>
     </goal>
     <goal name="remove&#39;vc.27.2.1.1" expl="false case (postcondition)" proved="true">
     <proof prover="2"><result status="valid" time="0.31" steps="54625"/></proof>
     <transf name="instantiate" proved="true" arg1="sub_occ_2" arg2="d1,d,i,h4.size,h4.size">
      <goal name="remove&#39;vc.27.2.1.1.0" expl="false case (postcondition)" proved="true">
      <proof prover="1"><result status="valid" time="2.47" steps="9382"/></proof>
      <proof prover="2"><result status="valid" time="0.42" steps="68879"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.28" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="14"/></proof>
  </goal>
  <goal name="remove&#39;vc.29" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="17"/></proof>
  </goal>
  <goal name="remove&#39;vc.30" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="86"/></proof>
  </goal>
  <goal name="remove&#39;vc.31" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.33"/></proof>
  <proof prover="1"><result status="valid" time="0.03" steps="22"/></proof>
  <proof prover="2"><result status="valid" time="0.15" steps="32298"/></proof>
  <proof prover="3"><result status="valid" time="0.07" steps="171324"/></proof>
  </goal>
  <goal name="remove&#39;vc.32" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.11"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="20"/></proof>
  <proof prover="2"><result status="valid" time="0.07" steps="28818"/></proof>
  <proof prover="3"><result status="valid" time="0.04" steps="11130"/></proof>
  </goal>
  <goal name="remove&#39;vc.33" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.33.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="17"/></proof>
   </goal>
   <goal name="remove&#39;vc.33.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="17"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.34" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.34.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="2.31" steps="16585"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove&#39;vc.35" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.93" steps="4534"/></proof>
  </goal>
  <goal name="remove&#39;vc.36" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.11"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="30"/></proof>
  <proof prover="2"><result status="valid" time="0.13" steps="30441"/></proof>
  <proof prover="3"><result status="valid" time="0.08" steps="171823"/></proof>
  </goal>
  <goal name="remove&#39;vc.37" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.24"/></proof>
  <proof prover="1"><result status="valid" time="0.02" steps="14"/></proof>
  <proof prover="2"><result status="valid" time="0.06" steps="28516"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="158217"/></proof>
  </goal>
  <goal name="remove&#39;vc.38" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="20"/></proof>
  <proof prover="2"><result status="valid" time="0.13" steps="32109"/></proof>
  <proof prover="3"><result status="valid" time="0.08" steps="164924"/></proof>
  </goal>
  <goal name="remove&#39;vc.39" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="47"/></proof>
  </goal>
  <goal name="remove&#39;vc.40" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="197"/></proof>
  </goal>
  <goal name="remove&#39;vc.41" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="241"/></proof>
  </goal>
  <goal name="remove&#39;vc.42" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="22"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Imperative.pop_maximum&#39;vc" expl="VC for pop_maximum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pop_maximum&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="24"/></proof>
  </goal>
  <goal name="pop_maximum&#39;vc.1" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="pop_maximum&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(m = h1.data[0]&#39;&#39;)">
    <goal name="pop_maximum&#39;vc.1.0.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="0.03" steps="18"/></proof>
    </goal>
    <goal name="pop_maximum&#39;vc.1.0.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.03" steps="43"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pop_maximum&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="24"/></proof>
  </goal>
  <goal name="pop_maximum&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="25"/></proof>
  </goal>
  <goal name="pop_maximum&#39;vc.4" expl="exceptional postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="31"/></proof>
  </goal>
  <goal name="pop_maximum&#39;vc.5" expl="exceptional postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="12"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
