<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.4.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Z3" version="4.8.7" timelimit="5" steplimit="0" memlimit="2000"/>
<prover id="2" name="CVC4" version="1.6" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="ocaml">
<path name=".."/><path name="has_cycle_via.ml"/>
<theory name="Has_cycle_via">
 <goal name="seq_cons" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="12"/></proof>
 </goal>
 <goal name="T.gt&#39;vc" expl="VC for gt">
 <proof prover="0"><result status="timeout" time="5.00"/></proof>
 </goal>
 <goal name="Cycle.G.gt&#39;vc" expl="VC for gt">
 <proof prover="0"><result status="timeout" time="5.00"/></proof>
 </goal>
 <goal name="Cycle.build_path&#39;vc" expl="VC for build_path">
 <proof prover="0"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="build_path&#39;vc.0" expl="termination">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="split_vc" >
   <goal name="build_path&#39;vc.0.0" expl="termination">
   <proof prover="0" obsolete="true"><result status="valid" time="0.02" steps="28"/></proof>
   </goal>
   <goal name="build_path&#39;vc.0.0" expl="loop variant decrease">
   <proof prover="0"><result status="timeout" time="5.00"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Cycle.has_cycle_directed&#39;vc" expl="VC for has_cycle_directed">
 <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="has_cycle_directed&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="31"/></proof>
  </goal>
  <goal name="has_cycle_directed&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
  </goal>
  <goal name="has_cycle_directed&#39;vc.2" expl="loop variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="101"/></proof>
  </goal>
  <goal name="has_cycle_directed&#39;vc.3" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.14" steps="842"/></proof>
  </goal>
  <goal name="has_cycle_directed&#39;vc.4" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="416"/></proof>
  </goal>
  <goal name="has_cycle_directed&#39;vc.5" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="44"/></proof>
  </goal>
  <goal name="has_cycle_directed&#39;vc.6" expl="precondition" proved="true">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <transf name="assert" proved="true" arg1="(mem v (view1 stack))">
   <goal name="has_cycle_directed&#39;vc.6.0" expl="asserted formula" proved="true">
   <proof prover="0" memlimit="2000"><result status="timeout" time="5.00"/></proof>
   <proof prover="1"><result status="timeout" time="5.00" steps="8695377"/></proof>
   <proof prover="2" memlimit="2000"><result status="timeout" time="5.00" steps="920688"/></proof>
   <transf name="inline_goal" proved="true" >
    <goal name="has_cycle_directed&#39;vc.6.0.0" expl="asserted formula" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="has_cycle_directed&#39;vc.6.0.0.0" expl="asserted formula" proved="true">
     <proof prover="2" timelimit="1"><result status="valid" time="0.49" steps="87329"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="has_cycle_directed&#39;vc.6.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="54"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="has_cycle_directed&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="60"/></proof>
  </goal>
  <goal name="has_cycle_directed&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="67"/></proof>
  </goal>
  <goal name="has_cycle_directed&#39;vc.9" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="303"/></proof>
  </goal>
  <goal name="has_cycle_directed&#39;vc.10" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="753"/></proof>
  </goal>
  <goal name="has_cycle_directed&#39;vc.11" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="270"/></proof>
  </goal>
  <goal name="has_cycle_directed&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="77"/></proof>
  </goal>
  <goal name="has_cycle_directed&#39;vc.13" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="55"/></proof>
  </goal>
  <goal name="has_cycle_directed&#39;vc.14" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="55"/></proof>
  </goal>
  <goal name="has_cycle_directed&#39;vc.15" expl="loop variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="121"/></proof>
  </goal>
  <goal name="has_cycle_directed&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="55"/></proof>
  </goal>
  <goal name="has_cycle_directed&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="2000"><result status="timeout" time="5.00"/></proof>
  <proof prover="1"><result status="timeout" time="5.00" steps="10965478"/></proof>
  <proof prover="2" memlimit="2000"><result status="timeout" time="5.00" steps="877782"/></proof>
  <transf name="inline_goal" proved="true" >
   <goal name="has_cycle_directed&#39;vc.17.0" expl="loop invariant preservation" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="has_cycle_directed&#39;vc.17.0.0" expl="loop invariant preservation" proved="true">
    <proof prover="0" timelimit="1"><result status="timeout" time="1.00"/></proof>
    <proof prover="1" timelimit="1" memlimit="1000"><result status="timeout" time="1.00" steps="1686460"/></proof>
    <proof prover="2" timelimit="1"><result status="timeout" time="1.00" steps="148047"/></proof>
    <transf name="split_vc" proved="true" >
     <goal name="has_cycle_directed&#39;vc.17.0.0.0" expl="loop invariant preservation" proved="true">
     <proof prover="0" memlimit="2000"><result status="timeout" time="5.00"/></proof>
     <proof prover="1"><result status="timeout" time="5.00" steps="12342762"/></proof>
     <proof prover="2" timelimit="30" memlimit="4000"><result status="valid" time="18.24" steps="1712543"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="has_cycle_directed&#39;vc.18" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="32"/></proof>
  </goal>
  <goal name="has_cycle_directed&#39;vc.19" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="32"/></proof>
  </goal>
  <goal name="has_cycle_directed&#39;vc.20" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="42"/></proof>
  </goal>
  <goal name="has_cycle_directed&#39;vc.21" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="302"/></proof>
  </goal>
  <goal name="has_cycle_directed&#39;vc.22" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="28"/></proof>
  </goal>
  <goal name="has_cycle_directed&#39;vc.23" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="146"/></proof>
  </goal>
  <goal name="has_cycle_directed&#39;vc.24" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="32"/></proof>
  </goal>
  <goal name="has_cycle_directed&#39;vc.25" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="134"/></proof>
  </goal>
  <goal name="has_cycle_directed&#39;vc.26" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="40"/></proof>
  </goal>
  <goal name="has_cycle_directed&#39;vc.27" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="102"/></proof>
  </goal>
  <goal name="has_cycle_directed&#39;vc.28" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="25"/></proof>
  </goal>
  <goal name="has_cycle_directed&#39;vc.29" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="68"/></proof>
  </goal>
  <goal name="has_cycle_directed&#39;vc.30" expl="termination">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Cycle.has_cycle_undirected&#39;vc" expl="VC for has_cycle_undirected">
 <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="has_cycle_undirected&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="39"/></proof>
  </goal>
  <goal name="has_cycle_undirected&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="30"/></proof>
  </goal>
  <goal name="has_cycle_undirected&#39;vc.2" expl="loop variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="122"/></proof>
  </goal>
  <goal name="has_cycle_undirected&#39;vc.3" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.24" steps="1954"/></proof>
  </goal>
  <goal name="has_cycle_undirected&#39;vc.4" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="711"/></proof>
  </goal>
  <goal name="has_cycle_undirected&#39;vc.5" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="56"/></proof>
  </goal>
  <goal name="has_cycle_undirected&#39;vc.6" expl="precondition" proved="true">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <transf name="assert" proved="true" arg1="(mem v (view1 stack))">
   <goal name="has_cycle_undirected&#39;vc.6.0" expl="asserted formula" proved="true">
   <proof prover="0" memlimit="2000"><result status="timeout" time="5.00"/></proof>
   <proof prover="1"><result status="timeout" time="5.00" steps="10118229"/></proof>
   <proof prover="2" memlimit="2000"><result status="timeout" time="5.00" steps="1082472"/></proof>
   <transf name="inline_goal" proved="true" >
    <goal name="has_cycle_undirected&#39;vc.6.0.0" expl="asserted formula" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="has_cycle_undirected&#39;vc.6.0.0.0" expl="asserted formula" proved="true">
     <proof prover="2" timelimit="1"><result status="valid" time="0.52" steps="93213"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="has_cycle_undirected&#39;vc.6.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="64"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="has_cycle_undirected&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="74"/></proof>
  </goal>
  <goal name="has_cycle_undirected&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="83"/></proof>
  </goal>
  <goal name="has_cycle_undirected&#39;vc.9" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="391"/></proof>
  </goal>
  <goal name="has_cycle_undirected&#39;vc.10" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.13" steps="984"/></proof>
  </goal>
  <goal name="has_cycle_undirected&#39;vc.11" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="349"/></proof>
  </goal>
  <goal name="has_cycle_undirected&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="104"/></proof>
  </goal>
  <goal name="has_cycle_undirected&#39;vc.13" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="65"/></proof>
  </goal>
  <goal name="has_cycle_undirected&#39;vc.14" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="65"/></proof>
  </goal>
  <goal name="has_cycle_undirected&#39;vc.15" expl="loop variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="137"/></proof>
  </goal>
  <goal name="has_cycle_undirected&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="65"/></proof>
  </goal>
  <goal name="has_cycle_undirected&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="2000"><result status="timeout" time="5.00"/></proof>
  <proof prover="1"><result status="timeout" time="5.00" steps="12054458"/></proof>
  <proof prover="2" memlimit="2000"><result status="timeout" time="5.00" steps="827175"/></proof>
  <transf name="inline_goal" proved="true" >
   <goal name="has_cycle_undirected&#39;vc.17.0" expl="loop invariant preservation" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="has_cycle_undirected&#39;vc.17.0.0" expl="loop invariant preservation" proved="true">
    <proof prover="0" timelimit="1"><result status="timeout" time="1.00"/></proof>
    <proof prover="1" timelimit="1" memlimit="1000"><result status="timeout" time="1.00" steps="1585644"/></proof>
    <proof prover="2" timelimit="1"><result status="timeout" time="1.00" steps="158425"/></proof>
    <transf name="split_vc" proved="true" >
     <goal name="has_cycle_undirected&#39;vc.17.0.0.0" expl="loop invariant preservation" proved="true">
     <proof prover="0" memlimit="2000"><result status="timeout" time="5.00"/></proof>
     <proof prover="1"><result status="timeout" time="5.00" steps="9892666"/></proof>
     <proof prover="2" timelimit="30" memlimit="4000"><result status="valid" time="24.16" steps="2389128"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="has_cycle_undirected&#39;vc.18" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="40"/></proof>
  </goal>
  <goal name="has_cycle_undirected&#39;vc.19" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="40"/></proof>
  </goal>
  <goal name="has_cycle_undirected&#39;vc.20" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="53"/></proof>
  </goal>
  <goal name="has_cycle_undirected&#39;vc.21" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="318"/></proof>
  </goal>
  <goal name="has_cycle_undirected&#39;vc.22" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="32"/></proof>
  </goal>
  <goal name="has_cycle_undirected&#39;vc.23" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="161"/></proof>
  </goal>
  <goal name="has_cycle_undirected&#39;vc.24" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="145"/></proof>
  </goal>
  <goal name="has_cycle_undirected&#39;vc.25" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="43"/></proof>
  </goal>
  <goal name="has_cycle_undirected&#39;vc.26" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="36"/></proof>
  </goal>
  <goal name="has_cycle_undirected&#39;vc.27" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="26"/></proof>
  </goal>
  <goal name="has_cycle_undirected&#39;vc.28" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="68"/></proof>
  </goal>
  <goal name="has_cycle_undirected&#39;vc.29" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="125"/></proof>
  </goal>
  <goal name="has_cycle_undirected&#39;vc.30" expl="termination">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Cycle.has_cycle&#39;vc" expl="VC for has_cycle">
 <proof prover="0"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="has_cycle&#39;vc.0" expl="termination">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="has_cycle&#39;vc.1" expl="termination">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Cycle.is_empty&#39;vc" expl="VC for is_empty" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="64"/></proof>
 </goal>
 <goal name="Cycle.hd&#39;vc" expl="VC for hd" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="127"/></proof>
 </goal>
 <goal name="Cycle.is_path_func&#39;vc" expl="VC for is_path_func" proved="true">
 <proof prover="0"><result status="valid" time="3.05" steps="26190"/></proof>
 </goal>
 <goal name="Cycle.is_cycle_func&#39;vc" expl="VC for is_cycle_func" proved="true">
 <proof prover="0"><result status="valid" time="0.14" steps="838"/></proof>
 </goal>
</theory>
</file>
</why3session>
