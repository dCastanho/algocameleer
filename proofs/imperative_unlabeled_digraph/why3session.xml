<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.4.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Eprover" version="2.5" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.8.7" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC4" version="1.6" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="ocaml" proved="true">
<path name=".."/><path name="imperative_unlabeled_digraph.ml"/>
<theory name="Imperative_unlabeled_digraph" proved="true">
 <goal name="ImperativeUnlabeledDigraph.S.Ord.compare_pre_order" proved="true">
 <proof prover="0"><result status="valid" time="0.00" steps="6"/></proof>
 </goal>
 <goal name="ImperativeUnlabeledDigraph.t&#39;vc" expl="VC for t" proved="true">
 <proof prover="1"><result status="valid" time="0.13"/></proof>
 </goal>
 <goal name="ImperativeUnlabeledDigraph.mem_edge&#39;vc" expl="VC for mem_edge" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="177"/></proof>
 </goal>
 <goal name="ImperativeUnlabeledDigraph.mem_edge_e&#39;vc" expl="VC for mem_edge_e" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="10"/></proof>
 </goal>
 <goal name="ImperativeUnlabeledDigraph.find_edge&#39;vc" expl="VC for find_edge" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="10"/></proof>
 </goal>
 <goal name="ImperativeUnlabeledDigraph.find_all_edges&#39;vc" expl="VC for find_all_edges" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="32"/></proof>
 </goal>
 <goal name="ImperativeUnlabeledDigraph.remove_edge&#39;vc" expl="VC for remove_edge" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="remove_edge&#39;vc.0" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="10"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="10"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="10"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="10"/></proof>
  <proof prover="1"><result status="valid" time="0.03"/></proof>
  <proof prover="2"><result status="valid" time="0.01" steps="5123"/></proof>
  <proof prover="3"><result status="valid" time="0.10" steps="25646"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="10"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.6" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="10"/></proof>
  <proof prover="1"><result status="valid" time="0.06"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="5112"/></proof>
  <proof prover="3"><result status="valid" time="0.07" steps="25181"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.7" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="12"/></proof>
  <proof prover="1"><result status="valid" time="0.05"/></proof>
  <proof prover="2"><result status="valid" time="0.09" steps="149697"/></proof>
  <proof prover="3"><result status="valid" time="0.09" steps="26405"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.8" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="4.67" steps="40252"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="200"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="3.79" steps="34724"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="349"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="350"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.13" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove_edge&#39;vc.13.0" expl="postcondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="remove_edge&#39;vc.13.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="remove_edge&#39;vc.13.0.0.0" expl="VC for remove_edge" proved="true">
     <proof prover="3" timelimit="1"><result status="valid" time="0.14" steps="35741"/></proof>
     </goal>
     <goal name="remove_edge&#39;vc.13.0.0.1" expl="VC for remove_edge" proved="true">
     <proof prover="3" timelimit="1"><result status="valid" time="0.23" steps="53287"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="remove_edge&#39;vc.14" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="14"/></proof>
  <proof prover="1"><result status="valid" time="0.03"/></proof>
  <proof prover="2"><result status="valid" time="0.01" steps="149972"/></proof>
  <proof prover="3"><result status="valid" time="0.07" steps="26424"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ImperativeUnlabeledDigraph.remove_edge_e&#39;vc" expl="VC for remove_edge_e" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="182"/></proof>
 <proof prover="2"><result status="valid" time="3.17" steps="6380850"/></proof>
 <proof prover="3"><result status="valid" time="0.08" steps="29678"/></proof>
 </goal>
 <goal name="ImperativeUnlabeledDigraph.create&#39;vc" expl="VC for create" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="67"/></proof>
 <proof prover="1"><result status="valid" time="0.14"/></proof>
 <proof prover="2"><result status="valid" time="1.66" steps="4623259"/></proof>
 <proof prover="3"><result status="valid" time="0.12" steps="30088"/></proof>
 </goal>
 <goal name="ImperativeUnlabeledDigraph.is_empty&#39;vc" expl="VC for is_empty" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="34"/></proof>
 <proof prover="1"><result status="valid" time="0.11"/></proof>
 <proof prover="2"><result status="valid" time="1.92" steps="5251033"/></proof>
 <proof prover="3"><result status="valid" time="0.09" steps="28464"/></proof>
 </goal>
 <goal name="ImperativeUnlabeledDigraph.nb_vertex&#39;vc" expl="VC for nb_vertex" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="12"/></proof>
 <proof prover="1"><result status="valid" time="0.25"/></proof>
 <proof prover="2"><result status="valid" time="0.02" steps="149536"/></proof>
 <proof prover="3"><result status="valid" time="0.07" steps="27662"/></proof>
 </goal>
 <goal name="ImperativeUnlabeledDigraph.copy&#39;vc" expl="VC for copy" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="copy&#39;vc.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="46"/></proof>
  </goal>
  <goal name="copy&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="109"/></proof>
  </goal>
  <goal name="copy&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="114"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ImperativeUnlabeledDigraph.clear&#39;vc" expl="VC for clear" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="67"/></proof>
 <proof prover="1"><result status="valid" time="0.13"/></proof>
 <proof prover="2"><result status="valid" time="1.92" steps="5603059"/></proof>
 <proof prover="3"><result status="valid" time="0.14" steps="33426"/></proof>
 </goal>
 <goal name="ImperativeUnlabeledDigraph.out_degree&#39;vc" expl="VC for out_degree" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="287"/></proof>
 <proof prover="1"><result status="valid" time="0.41"/></proof>
 <proof prover="2"><result status="valid" time="3.30" steps="6230858"/></proof>
 <proof prover="3"><result status="valid" time="0.12" steps="34164"/></proof>
 </goal>
 <goal name="ImperativeUnlabeledDigraph.mem_vertex&#39;vc" expl="VC for mem_vertex" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="32"/></proof>
 <proof prover="1"><result status="valid" time="0.17"/></proof>
 <proof prover="2"><result status="valid" time="4.15" steps="7469175"/></proof>
 <proof prover="3"><result status="valid" time="0.09" steps="29272"/></proof>
 </goal>
 <goal name="ImperativeUnlabeledDigraph.unsafe_add_vertex&#39;vc" expl="VC for unsafe_add_vertex" proved="true">
 <proof prover="0"><result status="valid" time="0.19" steps="1585"/></proof>
 </goal>
 <goal name="ImperativeUnlabeledDigraph.unsafe_add_edge&#39;vc" expl="VC for unsafe_add_edge" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="unsafe_add_edge&#39;vc.0" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="unsafe_add_edge&#39;vc.0.0" expl="type invariant" proved="true">
   <proof prover="0"><result status="valid" time="0.40" steps="3562"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="unsafe_add_edge&#39;vc.1" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="unsafe_add_edge&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.07" steps="297"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="unsafe_add_edge&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="157"/></proof>
  </goal>
  <goal name="unsafe_add_edge&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="156"/></proof>
  </goal>
  <goal name="unsafe_add_edge&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="182"/></proof>
  </goal>
  <goal name="unsafe_add_edge&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="27"/></proof>
  <proof prover="1"><result status="valid" time="0.12"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="177019"/></proof>
  <proof prover="3"><result status="valid" time="0.10" steps="30752"/></proof>
  </goal>
  <goal name="unsafe_add_edge&#39;vc.6" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="consistent">
   <goal name="unsafe_add_edge&#39;vc.6.0" expl="VC for unsafe_add_edge" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="unsafe_add_edge&#39;vc.6.0.0" expl="VC for unsafe_add_edge" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="91"/></proof>
    <proof prover="3" timelimit="1"><result status="valid" time="0.13" steps="34372"/></proof>
    </goal>
    <goal name="unsafe_add_edge&#39;vc.6.0.1" expl="VC for unsafe_add_edge" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="unsafe_add_edge&#39;vc.6.0.1.0" expl="VC for unsafe_add_edge" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="unsafe_add_edge&#39;vc.6.0.1.0.0" expl="VC for unsafe_add_edge" proved="true">
      <proof prover="0"><result status="valid" time="0.03" steps="86"/></proof>
      <proof prover="3" timelimit="1"><result status="valid" time="0.13" steps="35760"/></proof>
      </goal>
      <goal name="unsafe_add_edge&#39;vc.6.0.1.0.1" expl="VC for unsafe_add_edge" proved="true">
      <proof prover="3"><result status="valid" time="0.21" steps="50854"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="unsafe_add_edge&#39;vc.7" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="14"/></proof>
  <proof prover="1"><result status="valid" time="0.05"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="149804"/></proof>
  <proof prover="3"><result status="valid" time="0.08" steps="26415"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ImperativeUnlabeledDigraph.add_vertex&#39;vc" expl="VC for add_vertex" proved="true">
 <proof prover="0"><result status="valid" time="0.05" steps="211"/></proof>
 <proof prover="2"><result status="valid" time="4.47" steps="9134747"/></proof>
 <proof prover="3"><result status="valid" time="0.09" steps="32818"/></proof>
 </goal>
 <goal name="ImperativeUnlabeledDigraph.add_edge&#39;vc" expl="VC for add_edge" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="add_edge&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="16"/></proof>
  <proof prover="1"><result status="valid" time="0.14"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="9854"/></proof>
  <proof prover="3"><result status="valid" time="0.11" steps="25168"/></proof>
  </goal>
  <goal name="add_edge&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="14"/></proof>
  <proof prover="1"><result status="valid" time="0.04"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="9882"/></proof>
  <proof prover="3"><result status="valid" time="0.15" steps="25226"/></proof>
  </goal>
  <goal name="add_edge&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="14"/></proof>
  <proof prover="1"><result status="valid" time="0.03"/></proof>
  <proof prover="2"><result status="valid" time="0.05" steps="9907"/></proof>
  <proof prover="3"><result status="valid" time="0.14" steps="25281"/></proof>
  </goal>
  <goal name="add_edge&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="10"/></proof>
  </goal>
  <goal name="add_edge&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="36"/></proof>
  <proof prover="1"><result status="valid" time="0.86"/></proof>
  <proof prover="2"><result status="valid" time="0.06" steps="173785"/></proof>
  <proof prover="3"><result status="valid" time="0.11" steps="29268"/></proof>
  </goal>
  <goal name="add_edge&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="240"/></proof>
  </goal>
  <goal name="add_edge&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="14"/></proof>
  <proof prover="1"><result status="valid" time="0.03"/></proof>
  <proof prover="2"><result status="valid" time="0.02" steps="9930"/></proof>
  <proof prover="3"><result status="valid" time="0.07" steps="25329"/></proof>
  </goal>
  <goal name="add_edge&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="16"/></proof>
  <proof prover="3"><result status="valid" time="0.18" steps="27912"/></proof>
  </goal>
  <goal name="add_edge&#39;vc.8" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="71"/></proof>
  <proof prover="1"><result status="valid" time="0.20"/></proof>
  <proof prover="2"><result status="valid" time="0.03" steps="157155"/></proof>
  <proof prover="3"><result status="valid" time="0.07" steps="27087"/></proof>
  </goal>
  <goal name="add_edge&#39;vc.9" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="24"/></proof>
  </goal>
  <goal name="add_edge&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="104"/></proof>
  <proof prover="1"><result status="valid" time="0.14"/></proof>
  <proof prover="2"><result status="valid" time="0.06" steps="162524"/></proof>
  <proof prover="3"><result status="valid" time="0.12" steps="30029"/></proof>
  </goal>
  <goal name="add_edge&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="102"/></proof>
  <proof prover="1"><result status="valid" time="0.14"/></proof>
  <proof prover="2"><result status="valid" time="0.06" steps="162926"/></proof>
  <proof prover="3"><result status="valid" time="0.11" steps="30110"/></proof>
  </goal>
  <goal name="add_edge&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="100"/></proof>
  <proof prover="1"><result status="valid" time="0.12"/></proof>
  <proof prover="2"><result status="valid" time="0.04" steps="162826"/></proof>
  <proof prover="3"><result status="valid" time="0.09" steps="30168"/></proof>
  </goal>
  <goal name="add_edge&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="30"/></proof>
  </goal>
  <goal name="add_edge&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="30"/></proof>
  <proof prover="1"><result status="valid" time="0.03"/></proof>
  <proof prover="2"><result status="valid" time="0.02" steps="10343"/></proof>
  <proof prover="3"><result status="valid" time="0.09" steps="26167"/></proof>
  </goal>
  <goal name="add_edge&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="91"/></proof>
  <proof prover="1"><result status="valid" time="0.12"/></proof>
  <proof prover="2"><result status="valid" time="0.06" steps="171912"/></proof>
  <proof prover="3"><result status="valid" time="0.24" steps="32983"/></proof>
  </goal>
  <goal name="add_edge&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="32"/></proof>
  <proof prover="1"><result status="valid" time="0.04"/></proof>
  <proof prover="2"><result status="valid" time="0.02" steps="10353"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="26181"/></proof>
  </goal>
  <goal name="add_edge&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="343"/></proof>
  <proof prover="3"><result status="valid" time="0.25" steps="38235"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ImperativeUnlabeledDigraph.succ&#39;vc" expl="VC for succ" proved="true">
 <proof prover="0"><result status="valid" time="0.05" steps="240"/></proof>
 <proof prover="1"><result status="valid" time="0.40"/></proof>
 <proof prover="3"><result status="valid" time="0.13" steps="38604"/></proof>
 </goal>
 <goal name="ImperativeUnlabeledDigraph.succ_e&#39;vc" expl="VC for succ_e" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="succ_e&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="58"/></proof>
  </goal>
  <goal name="succ_e&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="59"/></proof>
  </goal>
  <goal name="succ_e&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="154"/></proof>
  </goal>
  <goal name="succ_e&#39;vc.3" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="succ_e&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="14"/></proof>
   <proof prover="3" timelimit="1"><result status="valid" time="0.19" steps="27529"/></proof>
   </goal>
   <goal name="succ_e&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="3" timelimit="1"><result status="valid" time="0.25" steps="39526"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="succ_e&#39;vc.4" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="succ_e&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="succ_e&#39;vc.4.0.0" expl="postcondition" proved="true">
    <proof prover="3" timelimit="1"><result status="valid" time="0.12" steps="27347"/></proof>
    </goal>
    <goal name="succ_e&#39;vc.4.0.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="14"/></proof>
    <proof prover="3" timelimit="1"><result status="valid" time="0.10" steps="27567"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="succ_e&#39;vc.4.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="succ_e&#39;vc.4.1.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="16"/></proof>
    </goal>
    <goal name="succ_e&#39;vc.4.1.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.01" steps="15"/></proof>
    <proof prover="3" timelimit="1"><result status="valid" time="0.12" steps="27994"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="succ_e&#39;vc.5" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="succ_e&#39;vc.5.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="18"/></proof>
   </goal>
   <goal name="succ_e&#39;vc.5.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="82"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="succ_e&#39;vc.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="10"/></proof>
  </goal>
  <goal name="succ_e&#39;vc.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="13"/></proof>
  </goal>
  <goal name="succ_e&#39;vc.8" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="succ_e&#39;vc.8.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="57"/></proof>
   </goal>
   <goal name="succ_e&#39;vc.8.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="14"/></proof>
   </goal>
   <goal name="succ_e&#39;vc.8.2" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="15"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="succ_e&#39;vc.9" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ImperativeUnlabeledDigraph.add_edge_e&#39;vc" expl="VC for add_edge_e" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="178"/></proof>
 <proof prover="1"><result status="valid" time="2.44"/></proof>
 <proof prover="2"><result status="valid" time="3.45" steps="9762834"/></proof>
 <proof prover="3"><result status="valid" time="0.07" steps="28313"/></proof>
 </goal>
</theory>
</file>
</why3session>
