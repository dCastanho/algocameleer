<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.4.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Z3" version="4.8.7" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.6" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="Eprover" version="2.5" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml">
<path name=".."/><path name="fold.mlw"/>
<theory name="FoldLeft" proved="true">
 <goal name="fold_left&#39;vc" expl="VC for fold_left" proved="true">
 <proof prover="0"><result status="valid" time="0.19" steps="2253"/></proof>
 </goal>
</theory>
<theory name="Hashtbl">
 <goal name="t&#39;vc" expl="VC for t" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="29"/></proof>
 </goal>
 <goal name="model_of_kxs&#39;vc" expl="VC for model_of_kxs">
 <proof prover="0"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="model_of_kxs&#39;vc.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
  <goal name="model_of_kxs&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="36"/></proof>
  </goal>
  <goal name="model_of_kxs&#39;vc.2" expl="postcondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <transf name="split_vc" >
   <goal name="model_of_kxs&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="16"/></proof>
   </goal>
   <goal name="model_of_kxs&#39;vc.2.1" expl="postcondition">
   <proof prover="0"><result status="timeout" time="5.00"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Client" proved="true">
 <goal name="client&#39;vc" expl="VC for client" proved="true">
 <proof prover="0"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="client&#39;vc.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="38"/></proof>
  </goal>
  <goal name="client&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="151"/></proof>
  </goal>
  <goal name="client&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="1" timelimit="30" memlimit="4000" obsolete="true"><result status="timeout" time="30.00" steps="78410756"/></proof>
  <proof prover="2" timelimit="30" memlimit="4000" obsolete="true"><result status="timeout" time="30.00" steps="4282075"/></proof>
  <transf name="unfold" proved="true" arg1="inv" arg2="in" arg3="Ensures">
   <goal name="client&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <transf name="destruct_rec" proved="true" arg1="Ensures">
    <goal name="client&#39;vc.2.0.0" expl="postcondition" proved="true">
    <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
    <transf name="instantiate" proved="true" arg1="Ensures" arg2="i">
     <goal name="client&#39;vc.2.0.0.0" expl="postcondition" proved="true">
     <transf name="destruct_rec" proved="true" arg1="Hinst">
      <goal name="client&#39;vc.2.0.0.0.0" expl="destruct premise" proved="true">
      <proof prover="0"><result status="valid" time="0.01" steps="14"/></proof>
      </goal>
      <goal name="client&#39;vc.2.0.0.0.1" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.02" steps="79"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ClientLength" proved="true">
 <goal name="client&#39;vc" expl="VC for client" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="140"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="5.00" steps="13998900"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="5.00" steps="431256"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="5.00"/></proof>
 </goal>
</theory>
<theory name="ClientPairValues" proved="true">
 <goal name="client&#39;vc" expl="VC for client" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="client&#39;vc.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="38"/></proof>
  </goal>
  <goal name="client&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="150"/></proof>
  </goal>
  <goal name="client&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="unfold" proved="true" arg1="inv" arg2="in" arg3="Ensures">
   <goal name="client&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="destruct_rec" proved="true" arg1="Ensures">
    <goal name="client&#39;vc.2.0.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="Ensures" arg2="i">
     <goal name="client&#39;vc.2.0.0.0" expl="postcondition" proved="true">
     <transf name="destruct_rec" proved="true" arg1="Hinst">
      <goal name="client&#39;vc.2.0.0.0.0" expl="destruct premise" proved="true">
      <proof prover="0"><result status="valid" time="0.01" steps="14"/></proof>
      </goal>
      <goal name="client&#39;vc.2.0.0.0.1" expl="postcondition" proved="true">
      <proof prover="0"><result status="timeout" time="5.00"/></proof>
      <transf name="exists" proved="true" arg1="v[i]&#39;">
       <goal name="client&#39;vc.2.0.0.0.1.0" proved="true">
       <proof prover="0"><result status="valid" time="0.02" steps="56"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ClientValues" proved="true">
 <goal name="client&#39;vc" expl="VC for client" proved="true">
 <proof prover="0"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="client&#39;vc.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="38"/></proof>
  </goal>
  <goal name="client&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="125"/></proof>
  </goal>
  <goal name="client&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="unfold" proved="true" arg1="inv" arg2="in" arg3="Ensures">
   <goal name="client&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="destruct_rec" proved="true" arg1="Ensures">
    <goal name="client&#39;vc.2.0.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="Ensures" arg2="i">
     <goal name="client&#39;vc.2.0.0.0" expl="postcondition" proved="true">
     <transf name="destruct_rec" proved="true" arg1="Hinst">
      <goal name="client&#39;vc.2.0.0.0.0" expl="destruct premise" proved="true">
      <proof prover="0"><result status="valid" time="0.01" steps="14"/></proof>
      </goal>
      <goal name="client&#39;vc.2.0.0.0.1" expl="postcondition" proved="true">
      <transf name="exists" proved="true" arg1="v1[i]&#39;">
       <goal name="client&#39;vc.2.0.0.0.1.0" proved="true">
       <proof prover="0"><result status="valid" time="0.02" steps="59"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="client&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="5.00" steps="15587810"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00" steps="587351"/></proof>
  <transf name="unfold" proved="true" arg1="inv" arg2="in" arg3="Ensures1">
   <goal name="client&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="destruct" proved="true" arg1="Ensures1">
    <goal name="client&#39;vc.3.0.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="Ensures1" arg2="i">
     <goal name="client&#39;vc.3.0.0.0" expl="postcondition" proved="true">
     <transf name="destruct_rec" proved="true" arg1="Hinst">
      <goal name="client&#39;vc.3.0.0.0.0" expl="destruct premise" proved="true">
      <proof prover="0"><result status="valid" time="0.01" steps="14"/></proof>
      </goal>
      <goal name="client&#39;vc.3.0.0.0.1" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.02" steps="92"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
