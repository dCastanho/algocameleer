<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.4.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.6" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Eprover" version="2.5" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.8.7" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="Z3" version="4.8.7" alternative="noBV" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="ocaml" proved="true">
<path name=".."/><path name="persistent_labeled_graph.ml"/>
<theory name="Persistent_labeled_graph" proved="true">
 <goal name="PersistentLabeledGraph.HM.Ord.compare_pre_order" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="10"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.S.Ord.compare_pre_order" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="14"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.t&#39;vc" expl="VC for t" proved="true">
 <proof prover="2"><result status="valid" time="0.21"/></proof>
 <proof prover="3"><result status="valid" time="0.09" steps="325167"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.eq_seq_list" proved="true">
 <proof prover="1"><result status="valid" time="4.33" steps="603230"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.first_mem" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="83"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.sub_list" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sub_list.0" proved="true">
  <proof prover="0"><result status="valid" time="0.21" steps="2351"/></proof>
  </goal>
  <goal name="sub_list.1" proved="true">
  <transf name="assert" proved="true" arg1="(mem1 e (of_list x))">
   <goal name="sub_list.1.0" expl="asserted formula" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="24"/></proof>
   </goal>
   <goal name="sub_list.1.1" proved="true">
   <proof prover="1"><result status="valid" time="2.09" steps="198686"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="PersistentLabeledGraph.mem_edge&#39;vc" expl="VC for mem_edge" proved="true">
 <proof prover="2"><result status="valid" time="1.07"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.mem_edge_e&#39;vc" expl="VC for mem_edge_e" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="218"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.find_edge&#39;vc" expl="VC for find_edge" proved="true">
 <proof prover="0"><result status="valid" time="0.17" steps="641"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="find_edge&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="28"/></proof>
  <proof prover="1"><result status="valid" time="0.18" steps="37294"/></proof>
  <proof prover="3"><result status="valid" time="0.12" steps="205710"/></proof>
  </goal>
  <goal name="find_edge&#39;vc.1" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="28"/></proof>
  <proof prover="1"><result status="valid" time="0.14" steps="35040"/></proof>
  <proof prover="2"><result status="valid" time="0.08"/></proof>
  <proof prover="3"><result status="valid" time="0.09" steps="232539"/></proof>
  </goal>
  <goal name="find_edge&#39;vc.2" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="127"/></proof>
  <proof prover="1"><result status="valid" time="0.16" steps="42624"/></proof>
  <proof prover="2"><result status="valid" time="0.30"/></proof>
  </goal>
  <goal name="find_edge&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
  <proof prover="1"><result status="valid" time="0.17" steps="37607"/></proof>
  <proof prover="3"><result status="valid" time="0.07" steps="309417"/></proof>
  </goal>
  <goal name="find_edge&#39;vc.4" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="36"/></proof>
  <proof prover="1"><result status="valid" time="0.11" steps="35201"/></proof>
  <proof prover="2"><result status="valid" time="0.19"/></proof>
  <proof prover="3"><result status="valid" time="0.17" steps="468509"/></proof>
  </goal>
  <goal name="find_edge&#39;vc.5" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="143"/></proof>
  </goal>
  <goal name="find_edge&#39;vc.6" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="find_edge&#39;vc.6.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="26"/></proof>
   <proof prover="1"><result status="valid" time="0.09" steps="32626"/></proof>
   <proof prover="2"><result status="valid" time="0.05"/></proof>
   <proof prover="3"><result status="valid" time="0.02" steps="13034"/></proof>
   </goal>
   <goal name="find_edge&#39;vc.6.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="26"/></proof>
   <proof prover="1"><result status="valid" time="0.09" steps="32626"/></proof>
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   <proof prover="3"><result status="valid" time="0.01" steps="13034"/></proof>
   </goal>
   <goal name="find_edge&#39;vc.6.2" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="203"/></proof>
   <proof prover="1"><result status="valid" time="2.12" steps="248820"/></proof>
   <proof prover="2"><result status="valid" time="6.46"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="find_edge&#39;vc.7" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="22"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PersistentLabeledGraph.find_all_edges&#39;vc" expl="VC for find_all_edges" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="find_all_edges&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="142"/></proof>
  <proof prover="1"><result status="valid" time="0.17" steps="43620"/></proof>
  <proof prover="2"><result status="valid" time="0.27"/></proof>
  </goal>
  <goal name="find_all_edges&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="45"/></proof>
  </goal>
  <goal name="find_all_edges&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="46"/></proof>
  </goal>
  <goal name="find_all_edges&#39;vc.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="137"/></proof>
  <proof prover="1"><result status="valid" time="0.41" steps="61576"/></proof>
  <proof prover="2"><result status="valid" time="0.22"/></proof>
  <proof prover="3"><result status="valid" time="0.09" steps="292220"/></proof>
  <proof prover="4"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="find_all_edges&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="401"/></proof>
  <proof prover="1"><result status="valid" time="0.13" steps="39646"/></proof>
  </goal>
  <goal name="find_all_edges&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="26"/></proof>
  </goal>
  <goal name="find_all_edges&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="28"/></proof>
  </goal>
  <goal name="find_all_edges&#39;vc.7" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="find_all_edges&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="find_all_edges&#39;vc.7.0.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.01" steps="32"/></proof>
    <proof prover="1"><result status="valid" time="0.14" steps="35967"/></proof>
    </goal>
    <goal name="find_all_edges&#39;vc.7.0.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="53"/></proof>
    <proof prover="1"><result status="valid" time="0.19" steps="36533"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="find_all_edges&#39;vc.7.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="find_all_edges&#39;vc.7.1.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="28"/></proof>
    <proof prover="1"><result status="valid" time="0.11" steps="35252"/></proof>
    </goal>
    <goal name="find_all_edges&#39;vc.7.1.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="49"/></proof>
    <proof prover="1"><result status="valid" time="0.10" steps="35843"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="find_all_edges&#39;vc.7.2" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="find_all_edges&#39;vc.7.2.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.04" steps="28"/></proof>
    <proof prover="1"><result status="valid" time="0.13" steps="35258"/></proof>
    </goal>
    <goal name="find_all_edges&#39;vc.7.2.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="49"/></proof>
    <proof prover="1"><result status="valid" time="0.10" steps="35853"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="find_all_edges&#39;vc.8" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="find_all_edges&#39;vc.8.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="26"/></proof>
   <proof prover="1"><result status="valid" time="0.18" steps="35610"/></proof>
   </goal>
   <goal name="find_all_edges&#39;vc.8.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="195"/></proof>
   <proof prover="1"><result status="valid" time="0.41" steps="61630"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="find_all_edges&#39;vc.9" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="find_all_edges&#39;vc.9.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="35"/></proof>
   <proof prover="1"><result status="valid" time="0.18" steps="39585"/></proof>
   </goal>
   <goal name="find_all_edges&#39;vc.9.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="242"/></proof>
   <proof prover="1"><result status="valid" time="0.25" steps="41123"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="find_all_edges&#39;vc.10" expl="precondition" proved="true">
  <transf name="instantiate" proved="true" arg1="t&#39;invariant" arg2="g,v1">
   <goal name="find_all_edges&#39;vc.10.0" expl="precondition" proved="true">
   <transf name="destruct" proved="true" arg1="Hinst">
    <goal name="find_all_edges&#39;vc.10.0.0" expl="destruct premise" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="22"/></proof>
    </goal>
    <goal name="find_all_edges&#39;vc.10.0.1" expl="precondition" proved="true">
    <transf name="instantiate" proved="true" arg1="Hinst" arg2="e">
     <goal name="find_all_edges&#39;vc.10.0.1.0" expl="precondition" proved="true">
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="find_all_edges&#39;vc.10.0.1.0.0" expl="destruct premise" proved="true">
      <proof prover="0"><result status="valid" time="0.03" steps="25"/></proof>
      </goal>
      <goal name="find_all_edges&#39;vc.10.0.1.0.1" expl="precondition" proved="true">
      <proof prover="2"><result status="valid" time="2.61"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="find_all_edges&#39;vc.11" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="30"/></proof>
  </goal>
  <goal name="find_all_edges&#39;vc.12" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="22"/></proof>
  <proof prover="1"><result status="valid" time="0.12" steps="33164"/></proof>
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="find_all_edges&#39;vc.13" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="find_all_edges&#39;vc.13.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="find_all_edges&#39;vc.13.0.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="29"/></proof>
    <proof prover="1"><result status="valid" time="0.19" steps="38436"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="find_all_edges&#39;vc.13.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="26"/></proof>
   <proof prover="1"><result status="valid" time="0.12" steps="37486"/></proof>
   </goal>
   <goal name="find_all_edges&#39;vc.13.2" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="26"/></proof>
   <proof prover="1"><result status="valid" time="0.13" steps="37486"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="find_all_edges&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="291"/></proof>
  </goal>
  <goal name="find_all_edges&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="27"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PersistentLabeledGraph.succ&#39;vc" expl="VC for succ" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="succ&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="125"/></proof>
  </goal>
  <goal name="succ&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="122"/></proof>
  </goal>
  <goal name="succ&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.13" steps="826"/></proof>
  </goal>
  <goal name="succ&#39;vc.3" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="succ&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.13" steps="26"/></proof>
   </goal>
   <goal name="succ&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="124"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="succ&#39;vc.4" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="succ&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="116"/></proof>
   </goal>
   <goal name="succ&#39;vc.4.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="116"/></proof>
   <proof prover="1" timelimit="1"><result status="valid" time="0.11" steps="38145"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="succ&#39;vc.5" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="succ&#39;vc.5.0" expl="postcondition" proved="true">
   <proof prover="1" timelimit="1"><result status="valid" time="0.17" steps="38326"/></proof>
   </goal>
   <goal name="succ&#39;vc.5.1" expl="postcondition" proved="true">
   <proof prover="1" timelimit="1"><result status="valid" time="0.19" steps="38865"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="succ&#39;vc.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="22"/></proof>
  </goal>
  <goal name="succ&#39;vc.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="24"/></proof>
  </goal>
  <goal name="succ&#39;vc.8" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="succ&#39;vc.8.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="174"/></proof>
   </goal>
   <goal name="succ&#39;vc.8.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.36" steps="2236"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="succ&#39;vc.9" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="20"/></proof>
  <proof prover="1"><result status="valid" time="0.10" steps="34021"/></proof>
  <proof prover="2"><result status="valid" time="0.07"/></proof>
  <proof prover="3"><result status="valid" time="0.07" steps="173483"/></proof>
  <proof prover="4"><result status="valid" time="0.04"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PersistentLabeledGraph.succ_e&#39;vc" expl="VC for succ_e" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="succ_e&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="125"/></proof>
  </goal>
  <goal name="succ_e&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="122"/></proof>
  </goal>
  <goal name="succ_e&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="202"/></proof>
  </goal>
  <goal name="succ_e&#39;vc.3" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="succ_e&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="26"/></proof>
   <proof prover="1" timelimit="1"><result status="valid" time="0.14" steps="35100"/></proof>
   </goal>
   <goal name="succ_e&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="122"/></proof>
   <proof prover="1" timelimit="1"><result status="valid" time="0.46" steps="57307"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="succ_e&#39;vc.4" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="succ_e&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="succ_e&#39;vc.4.0.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="31"/></proof>
    </goal>
    <goal name="succ_e&#39;vc.4.0.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="34"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="succ_e&#39;vc.4.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="succ_e&#39;vc.4.1.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.04" steps="28"/></proof>
    </goal>
    <goal name="succ_e&#39;vc.4.1.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="30"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="succ_e&#39;vc.5" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="succ_e&#39;vc.5.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="34"/></proof>
   </goal>
   <goal name="succ_e&#39;vc.5.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="140"/></proof>
   <proof prover="1" timelimit="1"><result status="valid" time="0.22" steps="39741"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="succ_e&#39;vc.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="22"/></proof>
  </goal>
  <goal name="succ_e&#39;vc.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="31"/></proof>
  </goal>
  <goal name="succ_e&#39;vc.8" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="succ_e&#39;vc.8.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="2.70" steps="276419"/></proof>
   </goal>
   <goal name="succ_e&#39;vc.8.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="25"/></proof>
   </goal>
   <goal name="succ_e&#39;vc.8.2" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="116"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="succ_e&#39;vc.9" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="20"/></proof>
  <proof prover="1"><result status="valid" time="0.12" steps="34021"/></proof>
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  <proof prover="3"><result status="valid" time="0.05" steps="173483"/></proof>
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PersistentLabeledGraph.empty&#39;vc" expl="VC for empty" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="127"/></proof>
 <proof prover="1"><result status="valid" time="0.14" steps="43332"/></proof>
 <proof prover="2"><result status="valid" time="0.37"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.is_empty&#39;vc" expl="VC for is_empty" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="72"/></proof>
 <proof prover="2"><result status="valid" time="0.18"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.copy&#39;vc" expl="VC for copy" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="18"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.nb_vertex&#39;vc" expl="VC for nb_vertex" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="18"/></proof>
 <proof prover="2"><result status="valid" time="0.03"/></proof>
 <proof prover="3"><result status="valid" time="0.02" steps="12840"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.out_degree&#39;vc" expl="VC for out_degree" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="25"/></proof>
 <proof prover="1"><result status="valid" time="0.18" steps="44471"/></proof>
 <proof prover="2"><result status="valid" time="0.34"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.mem_vertex&#39;vc" expl="VC for mem_vertex" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="88"/></proof>
 <proof prover="1"><result status="valid" time="0.10" steps="37729"/></proof>
 <proof prover="2"><result status="valid" time="0.20"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.unsafe_add_vertex&#39;vc" expl="VC for unsafe_add_vertex" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="unsafe_add_vertex&#39;vc.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="3.06" steps="21236"/></proof>
  <proof prover="1"><result status="valid" time="0.27" steps="53671"/></proof>
  </goal>
  <goal name="unsafe_add_vertex&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="84"/></proof>
  <proof prover="1"><result status="valid" time="0.15" steps="37171"/></proof>
  <proof prover="2"><result status="valid" time="0.18"/></proof>
  <proof prover="3"><result status="valid" time="0.07" steps="196672"/></proof>
  <proof prover="4"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="unsafe_add_vertex&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="96"/></proof>
  <proof prover="1"><result status="valid" time="0.19" steps="39703"/></proof>
  <proof prover="2"><result status="valid" time="1.43"/></proof>
  <proof prover="3"><result status="valid" time="0.07" steps="201168"/></proof>
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="unsafe_add_vertex&#39;vc.3" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="(vx &lt;&gt; v)">
   <goal name="unsafe_add_vertex&#39;vc.3.0" expl="asserted formula" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="32"/></proof>
   <proof prover="1"><result status="valid" time="0.08" steps="34248"/></proof>
   <proof prover="2"><result status="valid" time="0.04"/></proof>
   <proof prover="3"><result status="valid" time="0.03" steps="80199"/></proof>
   </goal>
   <goal name="unsafe_add_vertex&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="48"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="unsafe_add_vertex&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="26"/></proof>
  <proof prover="1"><result status="valid" time="0.14" steps="35622"/></proof>
  <proof prover="2"><result status="valid" time="0.19"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="204289"/></proof>
  <proof prover="4"><result status="valid" time="0.07"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PersistentLabeledGraph.add_vertex&#39;vc" expl="VC for add_vertex" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="add_vertex&#39;vc.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="24"/></proof>
  <proof prover="1"><result status="valid" time="0.11" steps="34106"/></proof>
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="180012"/></proof>
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="add_vertex&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="26"/></proof>
  <proof prover="1"><result status="valid" time="0.10" steps="34352"/></proof>
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="204803"/></proof>
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="add_vertex&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="222"/></proof>
  <proof prover="1"><result status="valid" time="0.14" steps="39152"/></proof>
  </goal>
  <goal name="add_vertex&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="31"/></proof>
  <proof prover="1"><result status="valid" time="0.12" steps="35740"/></proof>
  <proof prover="2"><result status="valid" time="0.22"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PersistentLabeledGraph.pred&#39;vc" expl="VC for pred" proved="true">
 <proof prover="0"><result status="valid" time="1.28" steps="8123"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.in_degree&#39;vc" expl="VC for in_degree" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="20"/></proof>
 <proof prover="1"><result status="valid" time="0.08" steps="32341"/></proof>
 <proof prover="2"><result status="valid" time="0.03"/></proof>
 <proof prover="3"><result status="valid" time="0.02" steps="12849"/></proof>
 <proof prover="4"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.pred_e&#39;vc" expl="VC for pred_e" proved="true">
 <proof prover="0"><result status="valid" time="0.50" steps="2506"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.add_edge_e&#39;vc" expl="VC for add_edge_e" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="add_edge_e&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
  <proof prover="1"><result status="valid" time="0.07" steps="32375"/></proof>
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  <proof prover="3"><result status="valid" time="0.01" steps="12863"/></proof>
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="add_edge_e&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="26"/></proof>
  <proof prover="1"><result status="valid" time="0.11" steps="34105"/></proof>
  <proof prover="2"><result status="valid" time="0.08"/></proof>
  <proof prover="3"><result status="valid" time="0.05" steps="192279"/></proof>
  </goal>
  <goal name="add_edge_e&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="26"/></proof>
  <proof prover="1"><result status="valid" time="0.08" steps="32389"/></proof>
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  <proof prover="3"><result status="valid" time="0.02" steps="12873"/></proof>
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="add_edge_e&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="134"/></proof>
  <proof prover="1"><result status="valid" time="0.18" steps="40149"/></proof>
  </goal>
  <goal name="add_edge_e&#39;vc.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.60" steps="66180"/></proof>
  </goal>
  <goal name="add_edge_e&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.17" steps="626"/></proof>
  <proof prover="1"><result status="valid" time="0.23" steps="46862"/></proof>
  <proof prover="2"><result status="valid" time="0.31"/></proof>
  <proof prover="3"><result status="valid" time="0.10" steps="253887"/></proof>
  <proof prover="4"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="add_edge_e&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="236"/></proof>
  <proof prover="1"><result status="valid" time="0.17" steps="40883"/></proof>
  <proof prover="2"><result status="valid" time="0.18"/></proof>
  <proof prover="3"><result status="valid" time="0.10" steps="254525"/></proof>
  <proof prover="4"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="add_edge_e&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.12" steps="8058"/></proof>
  </goal>
  <goal name="add_edge_e&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="264"/></proof>
  <proof prover="1"><result status="valid" time="0.47" steps="53560"/></proof>
  </goal>
  <goal name="add_edge_e&#39;vc.9" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="42"/></proof>
  <proof prover="1"><result status="valid" time="0.18" steps="38138"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="218099"/></proof>
  <proof prover="4"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="add_edge_e&#39;vc.10" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="157"/></proof>
  <proof prover="1"><result status="valid" time="0.15" steps="37054"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="209888"/></proof>
  <proof prover="4"><result status="valid" time="0.08"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PersistentLabeledGraph.add_edge&#39;vc" expl="VC for add_edge" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="20"/></proof>
 <proof prover="1"><result status="valid" time="0.07" steps="32341"/></proof>
 <proof prover="2"><result status="valid" time="0.04"/></proof>
 <proof prover="3"><result status="valid" time="0.03" steps="12849"/></proof>
 <proof prover="4"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.remove_edge&#39;vc" expl="VC for remove_edge" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="remove_edge&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="20"/></proof>
  <proof prover="1"><result status="valid" time="0.07" steps="32385"/></proof>
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  <proof prover="3"><result status="valid" time="0.02" steps="43329"/></proof>
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="24"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="24"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="24"/></proof>
  <proof prover="1"><result status="valid" time="0.09" steps="32464"/></proof>
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  <proof prover="3"><result status="valid" time="0.08" steps="6717"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="24"/></proof>
  <proof prover="1"><result status="valid" time="0.17" steps="32475"/></proof>
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  <proof prover="3"><result status="valid" time="0.07" steps="6718"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="24"/></proof>
  <proof prover="1"><result status="valid" time="0.17" steps="32498"/></proof>
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  <proof prover="3"><result status="valid" time="0.09" steps="6720"/></proof>
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
  <proof prover="1"><result status="valid" time="0.09" steps="32589"/></proof>
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  <proof prover="3"><result status="valid" time="0.02" steps="6723"/></proof>
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
  <proof prover="1"><result status="valid" time="0.10" steps="32684"/></proof>
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  <proof prover="3"><result status="valid" time="0.02" steps="6723"/></proof>
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
  <proof prover="1"><result status="valid" time="0.09" steps="32770"/></proof>
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  <proof prover="3"><result status="valid" time="0.03" steps="6724"/></proof>
  <proof prover="4"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.9" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="26"/></proof>
  <proof prover="1"><result status="valid" time="0.11" steps="34121"/></proof>
  <proof prover="2"><result status="valid" time="0.09"/></proof>
  <proof prover="3"><result status="valid" time="0.07" steps="198878"/></proof>
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.10" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove_edge&#39;vc.10.0" expl="precondition" proved="true">
   <transf name="inline_all" proved="true" >
    <goal name="remove_edge&#39;vc.10.0.0" expl="precondition" proved="true">
    <proof prover="1"><result status="valid" time="0.38" steps="61720"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="remove_edge&#39;vc.10.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.44" steps="57823"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove_edge&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="758"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="304"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="195"/></proof>
  <proof prover="1"><result status="valid" time="0.24" steps="42518"/></proof>
  <proof prover="2"><result status="valid" time="0.45"/></proof>
  <proof prover="3"><result status="valid" time="0.01" steps="242447"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="139"/></proof>
  <proof prover="1"><result status="valid" time="0.21" steps="39295"/></proof>
  <proof prover="2"><result status="valid" time="0.21"/></proof>
  <proof prover="3"><result status="valid" time="0.02" steps="243011"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="287"/></proof>
  <proof prover="1"><result status="valid" time="0.17" steps="39952"/></proof>
  <proof prover="2"><result status="valid" time="2.72"/></proof>
  <proof prover="3"><result status="valid" time="0.01" steps="246322"/></proof>
  <proof prover="4"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="163"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.32" steps="1549"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="288"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.19" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="34"/></proof>
  <proof prover="1"><result status="valid" time="0.14" steps="37489"/></proof>
  <proof prover="2"><result status="valid" time="0.29"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="213639"/></proof>
  <proof prover="4"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.20" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="28"/></proof>
  <proof prover="1"><result status="valid" time="0.15" steps="34135"/></proof>
  <proof prover="2"><result status="valid" time="0.08"/></proof>
  <proof prover="3"><result status="valid" time="0.08" steps="199333"/></proof>
  <proof prover="4"><result status="valid" time="0.05"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PersistentLabeledGraph.remove_edge_e&#39;vc" expl="VC for remove_edge_e" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="remove_edge_e&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="24"/></proof>
  </goal>
  <goal name="remove_edge_e&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="24"/></proof>
  <proof prover="1"><result status="valid" time="0.07" steps="32456"/></proof>
  </goal>
  <goal name="remove_edge_e&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="24"/></proof>
  <proof prover="1"><result status="valid" time="0.10" steps="32483"/></proof>
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  <proof prover="3"><result status="valid" time="0.10" steps="6718"/></proof>
  <proof prover="4"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="remove_edge_e&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
  </goal>
  <goal name="remove_edge_e&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
  </goal>
  <goal name="remove_edge_e&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="remove_edge_e&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
  </goal>
  <goal name="remove_edge_e&#39;vc.7" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="26"/></proof>
  <proof prover="1"><result status="valid" time="0.11" steps="34122"/></proof>
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="198878"/></proof>
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="remove_edge_e&#39;vc.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.39" steps="58549"/></proof>
  </goal>
  <goal name="remove_edge_e&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="168"/></proof>
  </goal>
  <goal name="remove_edge_e&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="378"/></proof>
  <proof prover="1"><result status="valid" time="0.35" steps="48544"/></proof>
  </goal>
  <goal name="remove_edge_e&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.13" steps="667"/></proof>
  <proof prover="1"><result status="valid" time="0.26" steps="44851"/></proof>
  <proof prover="2"><result status="valid" time="2.54"/></proof>
  <proof prover="3"><result status="valid" time="0.12" steps="318873"/></proof>
  <proof prover="4"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="remove_edge_e&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="418"/></proof>
  </goal>
  <goal name="remove_edge_e&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.32" steps="2101"/></proof>
  </goal>
  <goal name="remove_edge_e&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="411"/></proof>
  </goal>
  <goal name="remove_edge_e&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="191"/></proof>
  </goal>
  <goal name="remove_edge_e&#39;vc.16" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="34"/></proof>
  <proof prover="1"><result status="valid" time="0.17" steps="37236"/></proof>
  <proof prover="2"><result status="valid" time="2.61"/></proof>
  <proof prover="3"><result status="valid" time="0.02" steps="219056"/></proof>
  <proof prover="4"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="remove_edge_e&#39;vc.17" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="24"/></proof>
  <proof prover="1"><result status="valid" time="0.13" steps="32429"/></proof>
  <proof prover="2"><result status="valid" time="0.05"/></proof>
  <proof prover="3"><result status="valid" time="0.07" steps="18702"/></proof>
  <proof prover="4"><result status="valid" time="0.03"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PersistentLabeledGraph.remove_vertex&#39;vc" expl="VC for remove_vertex" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="remove_vertex&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="175"/></proof>
  </goal>
  <goal name="remove_vertex&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove_vertex&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.48" steps="3617"/></proof>
   </goal>
   <goal name="remove_vertex&#39;vc.1.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="4.71" steps="27208"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove_vertex&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="255"/></proof>
  </goal>
  <goal name="remove_vertex&#39;vc.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="154"/></proof>
  </goal>
  <goal name="remove_vertex&#39;vc.4" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="( p &lt;&gt; (x1, x))">
   <goal name="remove_vertex&#39;vc.4.0" expl="asserted formula" proved="true">
   <proof prover="0"><result status="valid" time="0.05" steps="213"/></proof>
   </goal>
   <goal name="remove_vertex&#39;vc.4.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.38" steps="2137"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove_vertex&#39;vc.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.19" steps="961"/></proof>
  <proof prover="1"><result status="valid" time="0.50" steps="67607"/></proof>
  </goal>
  <goal name="remove_vertex&#39;vc.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.11"/></proof>
  </goal>
  <goal name="remove_vertex&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.34"/></proof>
  </goal>
  <goal name="remove_vertex&#39;vc.8" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove_vertex&#39;vc.8.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.11" steps="478"/></proof>
   </goal>
   <goal name="remove_vertex&#39;vc.8.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.37" steps="52977"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove_vertex&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="28"/></proof>
  <proof prover="1"><result status="valid" time="0.12" steps="40304"/></proof>
  <proof prover="2"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="remove_vertex&#39;vc.10" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove_vertex&#39;vc.10.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="34"/></proof>
   </goal>
   <goal name="remove_vertex&#39;vc.10.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.39" steps="2557"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove_vertex&#39;vc.11" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove_vertex&#39;vc.11.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="38"/></proof>
   </goal>
   <goal name="remove_vertex&#39;vc.11.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="3.13" steps="20764"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove_vertex&#39;vc.12" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove_vertex&#39;vc.12.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="remove_vertex&#39;vc.12.0.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="34"/></proof>
    <proof prover="1"><result status="valid" time="0.16" steps="40274"/></proof>
    <proof prover="2"><result status="valid" time="0.05"/></proof>
    <proof prover="3"><result status="valid" time="0.03" steps="96550"/></proof>
    </goal>
    <goal name="remove_vertex&#39;vc.12.0.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="155"/></proof>
    <proof prover="1"><result status="valid" time="0.23" steps="45656"/></proof>
    <proof prover="2"><result status="valid" time="0.29"/></proof>
    <proof prover="3"><result status="valid" time="0.10" steps="264565"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="remove_vertex&#39;vc.12.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="remove_vertex&#39;vc.12.1.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="34"/></proof>
    <proof prover="2"><result status="valid" time="0.06"/></proof>
    </goal>
    <goal name="remove_vertex&#39;vc.12.1.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.08" steps="423"/></proof>
    <proof prover="2"><result status="valid" time="5.32"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="remove_vertex&#39;vc.13" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove_vertex&#39;vc.13.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="remove_vertex&#39;vc.13.0.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="235"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="remove_vertex&#39;vc.13.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="remove_vertex&#39;vc.13.1.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.04" steps="158"/></proof>
    <proof prover="1"><result status="valid" time="0.17" steps="38721"/></proof>
    <proof prover="2"><result status="valid" time="0.10"/></proof>
    <proof prover="3"><result status="valid" time="0.10" steps="285024"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="remove_vertex&#39;vc.14" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove_vertex&#39;vc.14.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="remove_vertex&#39;vc.14.0.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.06" steps="204"/></proof>
    <proof prover="1"><result status="valid" time="0.21" steps="44394"/></proof>
    <proof prover="2"><result status="valid" time="1.63"/></proof>
    <proof prover="3"><result status="valid" time="0.17" steps="277333"/></proof>
    </goal>
    <goal name="remove_vertex&#39;vc.14.0.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.06" steps="352"/></proof>
    <proof prover="1"><result status="valid" time="0.17" steps="42166"/></proof>
    <proof prover="2"><result status="valid" time="1.34"/></proof>
    <proof prover="3"><result status="valid" time="0.11" steps="310311"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="remove_vertex&#39;vc.14.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="remove_vertex&#39;vc.14.1.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.06" steps="238"/></proof>
    <proof prover="1"><result status="valid" time="0.23" steps="44669"/></proof>
    <proof prover="2"><result status="valid" time="0.70"/></proof>
    <proof prover="3"><result status="valid" time="0.12" steps="282200"/></proof>
    </goal>
    <goal name="remove_vertex&#39;vc.14.1.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.05" steps="326"/></proof>
    <proof prover="1"><result status="valid" time="0.16" steps="42438"/></proof>
    <proof prover="2"><result status="valid" time="0.31"/></proof>
    <proof prover="3"><result status="valid" time="0.11" steps="313402"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="remove_vertex&#39;vc.15" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove_vertex&#39;vc.15.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="162"/></proof>
   </goal>
   <goal name="remove_vertex&#39;vc.15.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="169"/></proof>
   <proof prover="1"><result status="valid" time="0.22" steps="42938"/></proof>
   <proof prover="3"><result status="valid" time="0.22" steps="452819"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove_vertex&#39;vc.16" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="24"/></proof>
  <proof prover="1"><result status="valid" time="0.11" steps="36854"/></proof>
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  <proof prover="3"><result status="valid" time="0.03" steps="14916"/></proof>
  </goal>
  <goal name="remove_vertex&#39;vc.17" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="137"/></proof>
  </goal>
  <goal name="remove_vertex&#39;vc.18" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="32"/></proof>
  <proof prover="1"><result status="valid" time="0.23" steps="38605"/></proof>
  <proof prover="2"><result status="valid" time="0.06"/></proof>
  <proof prover="3"><result status="valid" time="0.09" steps="205037"/></proof>
  </goal>
  <goal name="remove_vertex&#39;vc.19" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.15" steps="128"/></proof>
  <proof prover="1"><result status="valid" time="0.46" steps="55386"/></proof>
  </goal>
  <goal name="remove_vertex&#39;vc.20" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="29"/></proof>
  </goal>
  <goal name="remove_vertex&#39;vc.21" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="34"/></proof>
  </goal>
  <goal name="remove_vertex&#39;vc.22" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove_vertex&#39;vc.22.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.05" steps="30"/></proof>
   <proof prover="2"><result status="valid" time="2.67"/></proof>
   </goal>
   <goal name="remove_vertex&#39;vc.22.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.05" steps="30"/></proof>
   <proof prover="1"><result status="valid" time="0.22" steps="43440"/></proof>
   <proof prover="2"><result status="valid" time="0.13"/></proof>
   <proof prover="3"><result status="valid" time="0.07" steps="226239"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove_vertex&#39;vc.23" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="203"/></proof>
  <proof prover="1"><result status="valid" time="0.18" steps="44097"/></proof>
  </goal>
  <goal name="remove_vertex&#39;vc.24" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="28"/></proof>
  <proof prover="1"><result status="valid" time="0.21" steps="37925"/></proof>
  </goal>
  <goal name="remove_vertex&#39;vc.25" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="98"/></proof>
  <proof prover="1"><result status="valid" time="0.20" steps="38131"/></proof>
  </goal>
  <goal name="remove_vertex&#39;vc.26" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="98"/></proof>
  </goal>
  <goal name="remove_vertex&#39;vc.27" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="298"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="remove_vertex&#39;vc.27.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.05" steps="298"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove_vertex&#39;vc.28" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="357"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
