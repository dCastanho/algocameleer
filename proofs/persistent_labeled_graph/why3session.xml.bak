<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.4.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.6" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Eprover" version="2.5" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.8.7" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="ocaml">
<path name=".."/><path name="persistent_labeled_graph.ml"/>
<theory name="Persistent_labeled_graph">
 <goal name="PersistentLabeledGraph.HM.Ord.compare_pre_order" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="10"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.S.Ord.compare_pre_order" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="14"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.t&#39;vc" expl="VC for t" proved="true">
 <proof prover="0"><result status="highfailure" time="2.23"/></proof>
 <proof prover="1"><result status="timeout" time="5.00" steps="1731625"/></proof>
 <proof prover="2"><result status="valid" time="0.22"/></proof>
 <proof prover="3"><result status="valid" time="0.09" steps="255763"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.mem_edge&#39;vc" expl="VC for mem_edge" proved="true">
 <proof prover="0"><result status="valid" time="0.05" steps="402"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="5.00" steps="3072473"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.mem_edge_e&#39;vc" expl="VC for mem_edge_e" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="405"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.succ&#39;vc" expl="VC for succ">
 <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="succ&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="5.00" steps="1135943"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="5.00" steps="9356523"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="succ&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
   </goal>
   <goal name="succ&#39;vc.0.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="109"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="succ&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="125"/></proof>
  </goal>
  <goal name="succ&#39;vc.2" expl="precondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="1"><result status="timeout" time="5.00" steps="1249748"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="3"><result status="timeout" time="5.00" steps="6298568"/></proof>
  </goal>
  <goal name="succ&#39;vc.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="5.00" steps="1173422"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="5.00" steps="8501149"/></proof>
  <transf name="split_vc" >
   <goal name="succ&#39;vc.3.0" expl="postcondition">
   <proof prover="0"><result status="timeout" time="5.00"/></proof>
   <proof prover="1"><result status="timeout" time="5.00" steps="1473055"/></proof>
   <proof prover="2"><result status="timeout" time="5.00"/></proof>
   <proof prover="3"><result status="timeout" time="5.00" steps="4719207"/></proof>
   </goal>
   <goal name="succ&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="26"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="succ&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="20"/></proof>
  </goal>
  <goal name="succ&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="22"/></proof>
  <proof prover="1" obsolete="true"><result status="valid" time="0.14" steps="32051"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.16"/></proof>
  <proof prover="3" obsolete="true"><result status="valid" time="0.06" steps="151924"/></proof>
  </goal>
  <goal name="succ&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="succ&#39;vc.6.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <transf name="inline_all" proved="true" >
    <goal name="succ&#39;vc.6.0.0" expl="postcondition" proved="true">
    <proof prover="0"><undone/></proof>
    <proof prover="1"><result status="timeout" time="5.00" steps="848028"/></proof>
    <proof prover="2"><result status="valid" time="0.27"/></proof>
    <proof prover="3"><result status="timeout" time="5.00" steps="8580110"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="succ&#39;vc.6.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="90"/></proof>
   <proof prover="1" obsolete="true"><result status="timeout" time="5.00" steps="3226252"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="4.19"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="5.00" steps="10358752"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="succ&#39;vc.7" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="20"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PersistentLabeledGraph.succ_e&#39;vc" expl="VC for succ_e">
 <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="succ_e&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="58"/></proof>
  </goal>
  <goal name="succ_e&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="126"/></proof>
  </goal>
  <goal name="succ_e&#39;vc.2" expl="precondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="1"><result status="timeout" time="5.00" steps="1139506"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="3"><result status="timeout" time="5.00" steps="7048365"/></proof>
  </goal>
  <goal name="succ_e&#39;vc.3" expl="postcondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="1"><result status="timeout" time="5.00" steps="1206111"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="3"><result status="timeout" time="5.00" steps="7166480"/></proof>
  </goal>
  <goal name="succ_e&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="22"/></proof>
  </goal>
  <goal name="succ_e&#39;vc.5" expl="postcondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="1"><result status="timeout" time="5.00" steps="3682388"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="3"><result status="timeout" time="5.00" steps="7787849"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PersistentLabeledGraph.empty&#39;vc" expl="VC for empty" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="125"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.out_degree&#39;vc" expl="VC for out_degree" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="24"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.mem_vertex&#39;vc" expl="VC for mem_vertex" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="88"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.unsafe_add_vertex&#39;vc" expl="VC for unsafe_add_vertex">
 <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="unsafe_add_vertex&#39;vc.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="646"/></proof>
  </goal>
  <goal name="unsafe_add_vertex&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="84"/></proof>
  </goal>
  <goal name="unsafe_add_vertex&#39;vc.2" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="inline_goal" >
   <goal name="unsafe_add_vertex&#39;vc.2.0" expl="postcondition">
   <transf name="split_vc" >
    <goal name="unsafe_add_vertex&#39;vc.2.0.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="96"/></proof>
    </goal>
    <goal name="unsafe_add_vertex&#39;vc.2.0.1" expl="postcondition">
    <proof prover="0"><result status="timeout" time="5.00"/></proof>
    <proof prover="1"><result status="timeout" time="5.00" steps="1364938"/></proof>
    <proof prover="2"><result status="timeout" time="5.00"/></proof>
    <proof prover="3"><result status="timeout" time="5.00" steps="8704120"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="unsafe_add_vertex&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="28"/></proof>
  <proof prover="1" timelimit="30" memlimit="4000" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="3" memlimit="2000" obsolete="true"><result status="timeout" time="5.00" steps="16648323"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PersistentLabeledGraph.add_vertex&#39;vc" expl="VC for add_vertex" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="222"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.in_degree&#39;vc" expl="VC for in_degree" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="20"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.add_edge_e&#39;vc" expl="VC for add_edge_e">
 <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="add_edge_e&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
  </goal>
  <goal name="add_edge_e&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="112"/></proof>
  </goal>
  <goal name="add_edge_e&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="26"/></proof>
  </goal>
  <goal name="add_edge_e&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="122"/></proof>
  </goal>
  <goal name="add_edge_e&#39;vc.4" expl="precondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="1"><result status="timeout" time="5.00" steps="780471"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="3"><result status="timeout" time="5.00" steps="9721868"/></proof>
  </goal>
  <goal name="add_edge_e&#39;vc.5" expl="precondition" proved="true">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="1"><result status="valid" time="0.45" steps="62427"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="3"><result status="timeout" time="5.00" steps="11287592"/></proof>
  </goal>
  <goal name="add_edge_e&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="239"/></proof>
  </goal>
  <goal name="add_edge_e&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="237"/></proof>
  </goal>
  <goal name="add_edge_e&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="3.26" steps="28571"/></proof>
  </goal>
  <goal name="add_edge_e&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="265"/></proof>
  </goal>
  <goal name="add_edge_e&#39;vc.10" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="42"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="5.00" steps="881889"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="5.00" steps="11942746"/></proof>
  </goal>
  <goal name="add_edge_e&#39;vc.11" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="154"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PersistentLabeledGraph.add_edge&#39;vc" expl="VC for add_edge" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="20"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.remove_edge&#39;vc" expl="VC for remove_edge">
 <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="remove_edge&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.6" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="26"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.7" expl="precondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="1"><result status="timeout" time="5.00" steps="826675"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="3"><result status="timeout" time="5.00" steps="7860435"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.8" expl="precondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="1"><result status="timeout" time="5.00" steps="801486"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="3"><result status="timeout" time="5.00" steps="8343324"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="661"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="271"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="178"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.18" steps="1264"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.13" expl="postcondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="1"><result status="timeout" time="5.00" steps="810156"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="3"><result status="timeout" time="5.00" steps="10678433"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.14" expl="postcondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="1"><result status="timeout" time="5.00" steps="894397"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="3"><result status="timeout" time="5.00" steps="10839130"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.15" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="34"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.16" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="28"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PersistentLabeledGraph.remove_edge_e&#39;vc" expl="VC for remove_edge_e">
 <proof prover="1" obsolete="true"><result status="timeout" time="5.00" steps="696578"/></proof>
 <transf name="split_vc" >
  <goal name="remove_edge_e&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="remove_edge_e&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
  </goal>
  <goal name="remove_edge_e&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
  </goal>
  <goal name="remove_edge_e&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
  </goal>
  <goal name="remove_edge_e&#39;vc.4" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="26"/></proof>
  </goal>
  <goal name="remove_edge_e&#39;vc.5" expl="precondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="1"><result status="timeout" time="5.00" steps="779341"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="3"><result status="timeout" time="5.00" steps="8617913"/></proof>
  </goal>
  <goal name="remove_edge_e&#39;vc.6" expl="precondition" proved="true">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="1"><result status="valid" time="0.28" steps="46186"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="3"><result status="timeout" time="5.00" steps="9953528"/></proof>
  </goal>
  <goal name="remove_edge_e&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="168"/></proof>
  </goal>
  <goal name="remove_edge_e&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="462"/></proof>
  </goal>
  <goal name="remove_edge_e&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="520"/></proof>
  </goal>
  <goal name="remove_edge_e&#39;vc.10" expl="postcondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="1"><result status="timeout" time="5.00" steps="2905490"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="3"><result status="timeout" time="5.00" steps="10119028"/></proof>
  </goal>
  <goal name="remove_edge_e&#39;vc.11" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="34"/></proof>
  </goal>
  <goal name="remove_edge_e&#39;vc.12" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
