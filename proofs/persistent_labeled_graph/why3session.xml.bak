<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.4.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.6" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Eprover" version="2.5" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.8.7" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="ocaml">
<path name=".."/><path name="persistent_labeled_graph.ml"/>
<theory name="Persistent_labeled_graph">
 <goal name="PersistentLabeledGraph.HM.Ord.compare_pre_order" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="10"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.S.Ord.compare_pre_order" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="14"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.t&#39;vc" expl="VC for t" proved="true">
 <proof prover="0" obsolete="true"><result status="highfailure" time="2.32"/></proof>
 <proof prover="2"><result status="valid" time="0.22"/></proof>
 <proof prover="3"><result status="valid" time="0.09" steps="260698"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.mem_edge&#39;vc" expl="VC for mem_edge" proved="true">
 <proof prover="0"><result status="valid" time="0.05" steps="561"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.mem_edge_e&#39;vc" expl="VC for mem_edge_e" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="197"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.find_edge&#39;vc" expl="VC for find_edge" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="find_edge&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="24"/></proof>
  </goal>
  <goal name="find_edge&#39;vc.1" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="22"/></proof>
  </goal>
  <goal name="find_edge&#39;vc.2" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="113"/></proof>
  </goal>
  <goal name="find_edge&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="26"/></proof>
  </goal>
  <goal name="find_edge&#39;vc.4" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="30"/></proof>
  </goal>
  <goal name="find_edge&#39;vc.5" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="98"/></proof>
  </goal>
  <goal name="find_edge&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="5.00" steps="1455443"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="5.00" steps="8660894"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="find_edge&#39;vc.6.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="24"/></proof>
   </goal>
   <goal name="find_edge&#39;vc.6.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
   </goal>
   <goal name="find_edge&#39;vc.6.2" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="26"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="find_edge&#39;vc.7" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="22"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="5.00" steps="3045298"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="5.00" steps="6804156"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PersistentLabeledGraph.find_all_edges&#39;vc" expl="VC for find_all_edges">
 <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="find_all_edges&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="125"/></proof>
  <proof prover="1"><result status="valid" time="0.18" steps="37071"/></proof>
  </goal>
  <goal name="find_all_edges&#39;vc.1" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="5.00" steps="1093756"/></proof>
  </goal>
  <goal name="find_all_edges&#39;vc.2" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="5.00" steps="1694316"/></proof>
  <transf name="split_vc" >
   <goal name="find_all_edges&#39;vc.2.0" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
   </goal>
   <goal name="find_all_edges&#39;vc.2.1" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
   </goal>
   <goal name="find_all_edges&#39;vc.2.2" expl="postcondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="find_all_edges&#39;vc.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="find_all_edges&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="24"/></proof>
  <proof prover="1"><result status="valid" time="0.13" steps="33451"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PersistentLabeledGraph.succ&#39;vc" expl="VC for succ">
 <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="succ&#39;vc.0" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="split_vc" >
   <goal name="succ&#39;vc.0.0" expl="postcondition">
   <proof prover="0" timelimit="30" memlimit="4000"><result status="timeout" time="30.00"/></proof>
   <proof prover="1" timelimit="30" memlimit="4000"><result status="timeout" time="30.00" steps="7445868"/></proof>
   <proof prover="2"><result status="timeout" time="5.00"/></proof>
   <proof prover="3" timelimit="30" memlimit="4000"><result status="timeout" time="30.00" steps="43587576"/></proof>
   <transf name="induction_arg_ty_lex" arg1="sucs_e_set">
    <goal name="succ&#39;vc.0.0.0" expl="VC for succ">
    <transf name="split_vc" >
     <goal name="succ&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.04" steps="140"/></proof>
     </goal>
     <goal name="succ&#39;vc.0.0.0.1" expl="postcondition">
     <transf name="destruct" arg1="H">
      <goal name="succ&#39;vc.0.0.0.1.0" expl="destruct premise (postcondition)">
      <proof prover="0"><result status="timeout" time="5.00"/></proof>
      <transf name="split_vc" >
       <goal name="succ&#39;vc.0.0.0.1.0.0" expl="destruct premise (postcondition)" proved="true">
       <proof prover="0"><result status="valid" time="0.03" steps="101"/></proof>
       </goal>
       <goal name="succ&#39;vc.0.0.0.1.0.1" expl="destruct premise (postcondition)">
       <proof prover="0"><result status="timeout" time="5.00"/></proof>
       <proof prover="2"><result status="timeout" time="5.00"/></proof>
       <transf name="instantiate" arg1="Ensures" arg2="e">
        <goal name="succ&#39;vc.0.0.0.1.0.1.0" expl="destruct premise (postcondition)">
        <proof prover="0"><result status="timeout" time="5.00"/></proof>
        <transf name="case" arg1="(e = x1)">
         <goal name="succ&#39;vc.0.0.0.1.0.1.0.0" expl="true case (destruct premise. postcondition)">
         <proof prover="0"><result status="timeout" time="5.00"/></proof>
         </goal>
         <goal name="succ&#39;vc.0.0.0.1.0.1.0.1" expl="false case (destruct premise. postcondition)" proved="true">
         <proof prover="0"><result status="valid" time="0.03" steps="28"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="succ&#39;vc.0.0.0.1.1" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.04" steps="110"/></proof>
      </goal>
     </transf>
     <transf name="unfold" arg1="map2">
      <goal name="succ&#39;vc.0.0.0.1.0" expl="postcondition">
      <transf name="compile_match" >
       <goal name="succ&#39;vc.0.0.0.1.0.0" expl="postcondition">
       <transf name="assert" arg1="(exists a, b. x1 = (a, b))">
        <goal name="succ&#39;vc.0.0.0.1.0.0.0" expl="asserted formula" proved="true">
        <proof prover="0"><result status="timeout" time="5.00"/></proof>
        <proof prover="2"><result status="valid" time="0.14"/></proof>
        </goal>
        <goal name="succ&#39;vc.0.0.0.1.0.0.1" expl="postcondition">
        <proof prover="2"><result status="timeout" time="5.00"/></proof>
        <transf name="introduce_exists" >
         <goal name="succ&#39;vc.0.0.0.1.0.0.1.0" expl="postcondition">
         <transf name="subst" arg1="x1">
          <goal name="succ&#39;vc.0.0.0.1.0.0.1.0.0" expl="postcondition">
          <proof prover="0"><result status="timeout" time="5.00"/></proof>
          <proof prover="2"><result status="timeout" time="5.00"/></proof>
          <transf name="replace" arg1="((fun (binder&#39;12:(t8, t7)) -&gt; match binder&#39;12 with | x1, x2 -&gt; x1 end)    @ (a, b))" arg2="(a)">
           <goal name="succ&#39;vc.0.0.0.1.0.0.1.0.0.0" expl="postcondition">
           <proof prover="0"><result status="timeout" time="5.00"/></proof>
           <transf name="destruct" arg1="H">
            <goal name="succ&#39;vc.0.0.0.1.0.0.1.0.0.0.0" expl="destruct premise (postcondition)">
            <transf name="split_vc" >
             <goal name="succ&#39;vc.0.0.0.1.0.0.1.0.0.0.0.0" expl="destruct premise (postcondition)" proved="true">
             <proof prover="0"><result status="valid" time="0.03" steps="101"/></proof>
             </goal>
             <goal name="succ&#39;vc.0.0.0.1.0.0.1.0.0.0.0.1" expl="destruct premise (postcondition)">
             <proof prover="0"><result status="timeout" time="5.00"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="succ&#39;vc.0.0.0.1.0.0.1.0.0.0.1" expl="postcondition" proved="true">
            <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="succ&#39;vc.0.0.0.1.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
           <proof prover="0"><result status="valid" time="0.02" steps="23"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       <transf name="compute_in_goal" >
        <goal name="succ&#39;vc.0.0.0.1.0.0.0" expl="postcondition">
        <transf name="split_vc" >
         <goal name="succ&#39;vc.0.0.0.1.0.0.0.0" expl="postcondition">
         <proof prover="0"><result status="timeout" time="5.00"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       <transf name="simplify_formula" >
        <goal name="succ&#39;vc.0.0.0.1.0.0.0" expl="postcondition">
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="succ&#39;vc.1" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="20"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PersistentLabeledGraph.succ_e&#39;vc" expl="VC for succ_e">
 <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="succ_e&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="111"/></proof>
  </goal>
  <goal name="succ_e&#39;vc.1" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="5.00" steps="1179469"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="5.00" steps="6560540"/></proof>
  <transf name="split_vc" >
   <goal name="succ_e&#39;vc.1.0" expl="precondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
   </goal>
   <goal name="succ_e&#39;vc.1.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="29"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="succ_e&#39;vc.2" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="5.00" steps="655911"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="5.00" steps="9588229"/></proof>
  </goal>
  <goal name="succ_e&#39;vc.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="succ_e&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
  </goal>
  <goal name="succ_e&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="98"/></proof>
  </goal>
  <goal name="succ_e&#39;vc.6" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="20"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PersistentLabeledGraph.empty&#39;vc" expl="VC for empty" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="125"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.out_degree&#39;vc" expl="VC for out_degree" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="24"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.mem_vertex&#39;vc" expl="VC for mem_vertex" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="88"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.unsafe_add_vertex&#39;vc" expl="VC for unsafe_add_vertex">
 <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="unsafe_add_vertex&#39;vc.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.52" steps="12930"/></proof>
  </goal>
  <goal name="unsafe_add_vertex&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="84"/></proof>
  </goal>
  <goal name="unsafe_add_vertex&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="96"/></proof>
  </goal>
  <goal name="unsafe_add_vertex&#39;vc.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="1" memlimit="2000" obsolete="true"><result status="timeout" time="5.00" steps="1365007"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="3" memlimit="2000" obsolete="true"><result status="timeout" time="5.00" steps="8719327"/></proof>
  </goal>
  <goal name="unsafe_add_vertex&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="26"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PersistentLabeledGraph.add_vertex&#39;vc" expl="VC for add_vertex" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="245"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.in_degree&#39;vc" expl="VC for in_degree" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="20"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.add_edge_e&#39;vc" expl="VC for add_edge_e" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="add_edge_e&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
  </goal>
  <goal name="add_edge_e&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="112"/></proof>
  </goal>
  <goal name="add_edge_e&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="26"/></proof>
  </goal>
  <goal name="add_edge_e&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="122"/></proof>
  </goal>
  <goal name="add_edge_e&#39;vc.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.45" steps="59273"/></proof>
  </goal>
  <goal name="add_edge_e&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="415"/></proof>
  </goal>
  <goal name="add_edge_e&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="224"/></proof>
  </goal>
  <goal name="add_edge_e&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.38" steps="11279"/></proof>
  </goal>
  <goal name="add_edge_e&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="250"/></proof>
  </goal>
  <goal name="add_edge_e&#39;vc.9" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="42"/></proof>
  <proof prover="1"><result status="valid" time="0.15" steps="33558"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="190155"/></proof>
  </goal>
  <goal name="add_edge_e&#39;vc.10" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="154"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PersistentLabeledGraph.add_edge&#39;vc" expl="VC for add_edge" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="20"/></proof>
 </goal>
 <goal name="PersistentLabeledGraph.remove_edge&#39;vc" expl="VC for remove_edge">
 <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="remove_edge&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="20"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="24"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="24"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="24"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.7" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="26"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.8" expl="precondition">
  <proof prover="0" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="1" timelimit="1" obsolete="true"><result status="timeout" time="1.00" steps="144368"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="3" timelimit="1" obsolete="true"><result status="timeout" time="1.00" steps="3345146"/></proof>
  <transf name="split_vc" >
   <goal name="remove_edge&#39;vc.8.0" expl="precondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
   </goal>
   <goal name="remove_edge&#39;vc.8.1" expl="precondition">
   <proof prover="0" timelimit="30" memlimit="4000" obsolete="true"><result status="timeout" time="30.00"/></proof>
   <proof prover="1" timelimit="30" memlimit="4000" obsolete="true"><result status="timeout" time="30.00" steps="6756135"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="3" timelimit="30" memlimit="4000" obsolete="true"><result status="timeout" time="30.00" steps="57178249"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove_edge&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="381"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="166"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="172"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.12" expl="postcondition">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="1" memlimit="2000" obsolete="true"><result status="timeout" time="5.00" steps="1851981"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="3" memlimit="2000" obsolete="true"><result status="timeout" time="5.00" steps="11100352"/></proof>
  <transf name="inline_goal" >
   <goal name="remove_edge&#39;vc.12.0" expl="postcondition">
   <transf name="split_all_full" >
    <goal name="remove_edge&#39;vc.12.0.0" expl="postcondition">
    <proof prover="0" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="1" timelimit="1" obsolete="true"><result status="timeout" time="1.00" steps="199196"/></proof>
    <proof prover="3" timelimit="1" obsolete="true"><result status="timeout" time="1.00" steps="2881511"/></proof>
    <transf name="split_vc" >
     <goal name="remove_edge&#39;vc.12.0.0.0" expl="postcondition">
     <proof prover="0" timelimit="30" memlimit="4000" obsolete="true"><result status="timeout" time="30.00"/></proof>
     <proof prover="1" timelimit="30" memlimit="4000" obsolete="true"><result status="timeout" time="30.00" steps="5678814"/></proof>
     <proof prover="3" timelimit="30" memlimit="4000" obsolete="true"><result status="timeout" time="30.00" steps="50351953"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="remove_edge&#39;vc.13" expl="postcondition">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="1" memlimit="2000" obsolete="true"><result status="timeout" time="5.00" steps="1435300"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="3" memlimit="2000" obsolete="true"><result status="timeout" time="5.00" steps="10675730"/></proof>
  <transf name="inline_goal" >
   <goal name="remove_edge&#39;vc.13.0" expl="postcondition">
   <transf name="split_all_full" >
    <goal name="remove_edge&#39;vc.13.0.0" expl="postcondition">
    <proof prover="0" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="1" timelimit="1" obsolete="true"><result status="timeout" time="1.00" steps="203991"/></proof>
    <proof prover="3" timelimit="1" obsolete="true"><result status="timeout" time="1.00" steps="2999615"/></proof>
    <transf name="split_vc" >
     <goal name="remove_edge&#39;vc.13.0.0.0" expl="postcondition">
     <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
     <proof prover="1" obsolete="true"><result status="timeout" time="5.00" steps="1218718"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
     <proof prover="3" obsolete="true"><result status="timeout" time="5.00" steps="7431508"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="remove_edge&#39;vc.14" expl="postcondition">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="1" memlimit="2000" obsolete="true"><result status="timeout" time="5.00" steps="1351832"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="3" memlimit="2000" obsolete="true"><result status="timeout" time="5.00" steps="10835762"/></proof>
  <transf name="inline_goal" >
   <goal name="remove_edge&#39;vc.14.0" expl="postcondition">
   <transf name="split_all_full" >
    <goal name="remove_edge&#39;vc.14.0.0" expl="postcondition">
    <proof prover="0" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="1" timelimit="1" obsolete="true"><result status="timeout" time="1.00" steps="221142"/></proof>
    <proof prover="3" timelimit="1" obsolete="true"><result status="timeout" time="1.00" steps="2911193"/></proof>
    <transf name="split_vc" >
     <goal name="remove_edge&#39;vc.14.0.0.0" expl="postcondition">
     <proof prover="0" timelimit="30" memlimit="4000" obsolete="true"><result status="timeout" time="30.00"/></proof>
     <proof prover="1" timelimit="30" memlimit="4000" obsolete="true"><result status="timeout" time="30.00" steps="5468913"/></proof>
     <proof prover="3" timelimit="30" memlimit="4000" obsolete="true"><result status="timeout" time="30.00" steps="52667100"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="remove_edge&#39;vc.15" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="34"/></proof>
  <proof prover="2"><result status="valid" time="0.26"/></proof>
  <proof prover="3"><result status="valid" time="0.06" steps="185936"/></proof>
  </goal>
  <goal name="remove_edge&#39;vc.16" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="28"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="PersistentLabeledGraph.remove_edge_e&#39;vc" expl="VC for remove_edge_e">
 <transf name="split_vc" >
  <goal name="remove_edge_e&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="24"/></proof>
  </goal>
  <goal name="remove_edge_e&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="24"/></proof>
  </goal>
  <goal name="remove_edge_e&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="24"/></proof>
  <proof prover="1"><result status="valid" time="0.15" steps="28361"/></proof>
  <proof prover="2"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="remove_edge_e&#39;vc.3" expl="postcondition" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="remove_edge_e&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="remove_edge_e&#39;vc.3.0.0" expl="postcondition" proved="true">
    <proof prover="1" timelimit="1"><result status="valid" time="0.18" steps="38243"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="remove_edge_e&#39;vc.4" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="26"/></proof>
  </goal>
  <goal name="remove_edge_e&#39;vc.5" expl="precondition">
  <transf name="split_vc" >
   <goal name="remove_edge_e&#39;vc.5.0" expl="precondition">
   <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
   </goal>
   <goal name="remove_edge_e&#39;vc.5.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.32" steps="52148"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="remove_edge_e&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="157"/></proof>
  </goal>
  <goal name="remove_edge_e&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="361"/></proof>
  </goal>
  <goal name="remove_edge_e&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="476"/></proof>
  </goal>
  <goal name="remove_edge_e&#39;vc.9" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="remove_edge_e&#39;vc.10" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="34"/></proof>
  <proof prover="2"><result status="valid" time="2.16"/></proof>
  </goal>
  <goal name="remove_edge_e&#39;vc.11" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="24"/></proof>
  <proof prover="1"><result status="valid" time="0.13" steps="28307"/></proof>
  <proof prover="2"><result status="valid" time="0.04"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
